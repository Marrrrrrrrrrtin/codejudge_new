{"question_id": "112", "program": "\n  let result = '';\n  let isPalindrome = true;\n  for (let i = 0; i < s.length; i++) {\n    if (c.indexOf(s[i]) === -1) {\n      result += s[i];\n    }\n  }\n  for (let i = 0; i < result.length / 2; i++) {\n    if (result[i] !== result[result.length - i - 1]) {\n      isPalindrome = false;\n      break;\n    }\n  }\n  return [result, isPalindrome];\n};\n", "pass": true}
{"question_id": "3", "program": "\n  let balance = 0;\n  for (let i = 0; i < operations.length; i++) {\n    balance += operations[i];\n    if (balance < 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = belowZero;\n", "pass": true}
{"question_id": "102", "program": "\n  for (let i = x; i <= y; i++) {\n    if (i % 2 === 0) return i;\n  }\n  return -1;\n};\n", "pass": false}
{"question_id": "54", "program": "\n  const s0Set = new Set(s0);\n  const s1Set = new Set(s1);\n  return s0Set.size === s1Set.size && [...s0Set].every(c => s1Set.has(c));\n};\n", "pass": true}
{"question_id": "32", "program": "\n  if (xs.length % 2 === 0) {\n    const largest = xs.reduce((prev, item) => {\n      return Math.abs(item) > Math.abs(prev) ? item : prev;\n    }, 0);\n    if (largest === 0) {\n      return 0;\n    }\n    const n = xs.length;\n    const a = xs[n - 1] / largest;\n    const b = xs[n - 2] / largest;\n    const c = xs[n - 3] / largest;\n    const d = xs[n - 4] / largest;\n    const q = (a * c - b * b) / 3;\n    const r = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / 27;\n    const x1 = (q * q * q - r * q) / 2", "pass": false}
{"question_id": "75", "program": "\n  let prime = [];\n  for (let i = 2; i < a; i++) {\n    if (a % i === 0) {\n      prime.push(i);\n    }\n  }\n  if (prime.length === 3) {\n    return true;\n  } else {\n    return false;\n  }\n};\n", "pass": false}
{"question_id": "14", "program": "\n  const prefixes = [];\n  for (let i = 0; i < string.length; i++) {\n    prefixes.push(string.slice(0, i + 1));\n  }\n  return prefixes;\n};\n", "pass": true}
{"question_id": "128", "program": "\n  if (arr.length === 0) return null;\n  let result = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < 0) {\n      product *= -1;\n    }\n    result += product * Math", "pass": false}
{"question_id": "53", "program": "\n  return x + y;\n};\n", "pass": true}
{"question_id": "43", "program": "\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = pairsSumToZero;\n", "pass": true}
{"question_id": "63", "program": "\n  if (n === 0) return 0;\n  if (n === 1) return 0;\n  if (n === 2) return 1;\n  return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n};\n", "pass": true}
{"question_id": "99", "program": "\n  const num = parseFloat(value);\n  if (num % 1 === 0) {\n    return num;\n  }\n  return num > 0 ? Math.ceil(num) : Math.floor(num);\n};\n\nmodule.exports = closestInteger;\n", "pass": false}
{"question_id": "49", "program": "\n  let result = 1;\n  for (let i = 0; i < n; i++) {\n    result = (result * 2) % p;\n  }\n  return result;\n};\n\nmodule.exports = modp;\n", "pass": true}
{"question_id": "65", "program": "\n  let str = x.toString();\n  let len = str.length;\n  if (shift > len) {\n    return str.split(\"\").reverse().join(\"\");\n  } else {\n    let arr = str.split(\"\");\n    let temp = arr.splice(0, len - shift);\n    arr = arr.concat(temp);\n    return arr.join(\"\");\n  }\n};\n\nmodule.exports = circularShift;\n", "pass": true}
{"question_id": "118", "program": "\n  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  let wordArray = word.split(\"\");\n  let lastConsonant = \"\";\n  let firstConsonant = \"\";\n  let closestVowel = \"\";\n\n  wordArray.forEach((letter, index) => {\n    if (consonants.includes(letter)) {\n      lastConsonant = letter;\n    }\n    if (consonants.includes(wordArray[index - 1])) {\n      firstConsonant = wordArray[index - 1];\n    }\n  });\n\n  if (lastConsonant !== \"\" && firstConsonant !== \"\") {\n    wordArray.forEach((letter, index) => {\n      if (vowels.includes(letter) && index > wordArray.indexOf(firstConsonant) && index < wordArray.indexOf(lastConsonant)) {\n        closestVowel = letter;\n      }\n    });\n  }\n\n  return closestVowel;\n};\n\nconsole", "pass": false}
{"question_id": "115", "program": "\n  const rows = grid.length;\n  const cols = grid[0].length;\n  const dp = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      if (grid[i][j] === 1) {\n        dp[i][j] = 1;\n        continue;\n      }\n\n      if (i === 0) {\n        dp[i][j] = 0;\n        continue;\n      }\n\n     ", "pass": false}
{"question_id": "64", "program": "\n  let vowels = ['a', 'e', 'i', 'o', 'u'];\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (vowels.includes(s[i].toLowerCase())) {\n      count++;\n    }\n  }\n  return count;\n};\n", "pass": false}
{"question_id": "16", "program": "\n  const distinctCharacters = new Set();\n  for (const char of string) {\n    distinctCharacters.add(char.toLowerCase());\n  }\n  return distinctCharacters.size;\n};\n\nmodule.exports = countDistinctCharacters;\n", "pass": true}
{"question_id": "83", "program": "\n  let count = 0;\n  for (let i = 1; i < 10; i++) {\n    count += Math.pow(10, n - 1);\n  }\n  for (let i = 1; i < 10; i++) {\n    count += Math.pow(10, n - 1);\n  }\n  return count;\n};\n\nconst startsOneEnds = (n) => {\n  let count = 0;\n  for (let i = 1; i < 10; i++) {\n    count += Math.pow(10, n - 1);\n  }\n  for (let i = 1; i < 10; i++) {\n    count += Math.pow(10, n - 1);\n  }\n  return count;\n};\n", "pass": false}
{"question_id": "69", "program": "\n  const freq = {};\n  const max = Math.max(...lst);\n  lst.forEach((el) => {\n    if (freq[el]) {\n      freq[el] += 1;\n    } else {\n      freq[el] = 1;\n    }\n  });\n  for (let i = max; i > 0; i -= 1) {\n    if (freq[i] >= i) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nmodule.exports = search;\n", "pass": true}
{"question_id": "131", "program": "\n  let product = 1;\n  while (n > 0) {\n    let digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n};\n\nmodule.", "pass": false}
{"question_id": "25", "program": "\n  const factors = [];\n  let i = 2;\n  while (n > 1) {\n    if (n % i === 0) {\n      factors.push(i);\n      n /= i;\n    } else {\n      i++;\n    }\n  }\n  return factors;\n};\n\nmodule.exports = factorize;\n", "pass": true}
{"question_id": "78", "program": "\n  let count = 0;\n  for (let i = 0; i < num.length; i++) {\n    if (num[i] === \"2\" || num[i] === \"3\" || num[i] === \"5\" || num[i] === \"7\") {\n      count++;\n    }\n  }\n  return count;\n};\n", "pass": false}
{"question_id": "110", "program": "\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < lst1.length; i++) {\n    if (lst1[i] % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  if (even === lst1.length) {\n    return \"YES\";\n  } else if (odd > lst2.length) {\n    return \"NO\";\n  } else {\n    return \"YES\";\n  }\n};\n", "pass": false}
{"question_id": "13", "program": "\n  if (b === 0) {\n    return a;\n  }\n  return greatestCommonDivisor(b, a % b);\n};\n", "pass": true}
{"question_id": "91", "program": "\n  let count = 0;\n  let words = S.split(\" \");\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      count++;\n    }\n  }\n  return count;\n};\n\nmodule.exports = isBored;\n", "pass": false}
{"question_id": "134", "program": "\n  const lastChar = txt[txt.length - 1];\n  const lastCharIsLetter = lastChar.match(/[a-zA-Z]/);\n  const lastCharIsSpace = lastChar === \" \";\n  return lastCharIsLetter && !lastCharIsSpace;\n};\n", "pass": false}
{"question_id": "140", "program": "\n  return text.replace(/\\s+/g, (match) => {\n    if (match.length === 1) {\n      return \"_\";\n    } else {\n      return \"-\";\n    }\n  });\n};\n", "pass": false}
{"question_id": "36", "program": "\n  let count = 0;\n  for (let i = 11; i < n; i += 11) {\n    if (i % 11 === 0) {\n      count += 1;\n    }\n  }\n  for (let i = 13; i < n; i += 13) {\n    if (i % 13 === 0) {\n      count += 1;\n    }\n  }\n  return count;\n};\n\nmodule.exports = fizzBuzz;\n", "pass": false}
{"question_id": "60", "program": "\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n};\n", "pass": true}
{"question_id": "92", "program": "\n  if (x === y + z || y === x + z || z === x + y) {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n", "pass": true}
{"question_id": "27", "program": "\n  return string.split('').map(char => {\n    if (char === char.toLowerCase()) {\n      return char.toUpperCase();\n    } else {\n      return char.toLowerCase();\n    }\n  }).join('');\n}\n\nmodule.exports = flipCase;\n", "pass": true}
{"question_id": "120", "program": "\n  const result = [];\n  for (let i = 0; i < k; i++) {\n    let max = -Infinity;\n    let index = -1;\n    for (let j = 0; j < arr.length; j++) {\n      if (arr[j] > max) {\n        max = arr[j];\n        index = j;\n      }\n    }\n    result.push(max);\n    arr.splice(index, 1);\n  }\n  return result;\n};\n", "pass": false}
{"question_id": "74", "program": "\n  let totalChars = 0;\n  lst1.forEach((str) => {\n    totalChars += str.length;\n  });\n  let totalChars2 = 0;\n  lst2.forEach((str) => {\n    totalChars2 += str.length;\n  });\n  if (totalChars < totalChars2) {\n    return lst1;\n  } else if (totalChars > totalChars2) {\n    return lst2;\n  } else {\n    return lst1;\n  }\n};\n", "pass": true}
{"question_id": "51", "program": "\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  return text.split('').filter(char => !vowels.includes(char)).join('');\n};\n\nmodule.exports = removeVowels;\n", "pass": false}
{"question_id": "136", "program": "\n  let largestNegative = null;\n  let smallestPositive = null;\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative === null || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === null || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n\n  return [largestNegative, smallestPositive];\n};\n", "pass": false}
{"question_id": "4", "program": "\n  const mean = numbers.reduce((a, b) => a + b) / numbers.length;\n  const deviations = numbers.map((x) => Math.abs(x - mean));\n  return deviations.reduce((a, b) => a + b) / deviations.length;\n};\n\nmodule.exports = meanAbsoluteDeviation;\n", "pass": true}
{"question_id": "96", "program": "\n  const primeNumbers = [];\n  for (let i = 2; i < n; i++) {\n    if (isPrime(i)) {\n      primeNumbers.push(i);\n    }\n  }\n  return primeNumbers;\n};\n\nconst isPrime = (n) => {\n  if (n <= 1) {\n    return false;\n  }\n  for (let i = 2; i < n; i++) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n", "pass": true}
{"question_id": "150", "program": "\n  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n};\n", "pass": false}
{"question_id": "41", "program": "\n  let collisions = 0;\n  for (let i = 1; i <= n; i++) {\n    if (i % 2 === 0) {\n      collisions++;\n    }\n  }\n  return collisions;\n};\n", "pass": false}
{"question_id": "162", "program": "\n  if (text === '') {\n    return null;\n  }\n  const crypto = require('crypto');\n  return crypto.createHash('md5').update(text).digest('hex');\n};\n\nmodule.exports = stringToMd5;\n", "pass": true}
{"question_id": "133", "program": "\n  let newList = lst.map((num) => Math.ceil(num));\n  let sum = newList.reduce((acc, curr) => acc + curr ** 2, 0);\n  return sum;\n};\n", "pass": true}
{"question_id": "101", "program": "\n  return s.split(/[\\s,]+/);\n}\n", "pass": false}
{"question_id": "94", "program": "\n  let max = 0;\n  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  let prime = max;\n  for (let i = 2; i < prime; i++) {\n    if (prime % i === 0) {\n      prime = prime / i;\n      i = 1;\n    }\n  }\n  let str = prime.toString();\n  for (let i = 0; i < str.length; i++) {\n    sum += Number(str[i]);\n  }\n  return sum;\n};\n", "pass": false}
{"question_id": "147", "program": "\n  const a = [];\n  for (let i = 1; i <= n; i++) {\n    a.push(i * i - i + 1);\n  }\n  let count = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      for (let k = j + 1; k < n; k++) {\n        if ((a[i] + a[j] + a[k]) % 3 === 0) {\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n};\n", "pass": true}
{"question_id": "89", "program": "\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  let encrypted = '';\n  for (let i = 0; i < s.length; i++) {\n    let index = alphabet.indexOf(s[i]);\n    if (index !== -1) {\n      index += 2;\n      if (index > 25) {\n        index -= 26;\n      }\n      encrypted += alphabet[index];\n    } else {\n      encrypted += s[i];\n    }\n  }\n  return encrypted;\n};\n", "pass": false}
{"question_id": "31", "program": "\n  if (n < 2) {\n    return false;\n  }\n  for (let i = 2; i <= Math.sqrt(n); i++) {\n    if (n % i === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n", "pass": true}
{"question_id": "116", "program": "\n  const binary = arr.map((num) => num.toString(2));\n  const sorted = binary.sort((a, b) => {\n    if (a.length === b.length) {\n      return a - b;\n    }\n    return a.length - b.length;\n  });\n  return sorted.map((num) => parseInt(num, 2));\n};\n\nmodule.exports = sortArray;\n", "pass": false}
{"question_id": "21", "program": "\n  const min = Math.min(...numbers);\n  const max = Math.max(...numbers);\n  return numbers.map((num) => (num - min) / (max - min));\n};\n\nmodule.exports = rescaleToUnit;\n", "pass": true}
{"question_id": "122", "program": "\n  let sum = 0;\n  for (let i = 0; i < k; i++) {\n    const num = arr[i];\n    const digits = num.toString().length;\n    if (digits <= 2) {\n      sum += num;\n    }\n  }\n  return sum;\n};\n", "pass": true}
{"question_id": "9", "program": "\n  const result = [];\n  let max = numbers[0];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n};\n\nmodule.exports = rollingMax;\n", "pass": true}
{"question_id": "82", "program": "\n  const isPrime = (num) => {\n    for (let i = 2; i < num; i++) {\n      if (num % i === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return isPrime(string.length);\n};\n", "pass": false}
{"question_id": "34", "program": "\n  return l.sort().filter((v, i, a) => {\n    return i === 0 || v !== a[i - 1];\n  });\n};\n\nexport default unique;\n", "pass": false}
{"question_id": "85", "program": "\n  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n};\n", "pass": false}
{"question_id": "146", "program": "\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && (nums[i] % 10) % 2 === 1 && (Math.floor(nums[i] / 10)) % 2 === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n", "pass": false}
{"question_id": "125", "program": "\n  if (txt.includes(\" \")) {\n    return txt.split(\" \");\n  } else if (txt.includes(\",\")) {\n    return txt.split(\",\");\n  } else {\n    return txt.split(\"\").filter((char) => char.charCodeAt(0) % 2 === 1).length;\n  }\n};\n", "pass": false}
{"question_id": "47", "program": "\n  const sorted = l.sort((a, b) => a - b);\n  const half = Math.floor(sorted.length / 2);\n  if (sorted.length % 2 === 0) {\n    return (sorted[half - 1] + sorted[half]) / 2;\n  }\n  return sorted[half];\n};\n\nmodule.exports = median;\n", "pass": true}
{"question_id": "20", "program": "\n  let minDiff = Number.MAX_VALUE;\n  let minDiffIndex = -1;\n  let minDiffIndex2 = -1;\n  for (let i = 0; i < numbers.length; i++) {\n    for (let j = i + 1; j < numbers.length; j++) {\n      const diff = Math.abs(numbers[i] - numbers[j]);\n      if (diff < minDiff) {\n        minDiff = diff;\n        minDiffIndex = i;\n        minDiffIndex2 = j;\n      }\n    }\n  }\n  return [numbers[minDiffIndex], numbers[minDiffIndex2]];\n};\n\nmodule.exports = findClosestElements;\n", "pass": false}
{"question_id": "141", "program": "\n  const regex = /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/;\n  return regex.test(file_name) ? 'Yes' : 'No';\n};\n", "pass": false}
{"question_id": "81", "program": "\n  const letterGrades = [];\n  const gradeTable = [\n    { gpa: 4.0, letter: 'A+' },\n    { gpa: 3.7, letter: 'A' },\n    { gpa: 3.3, letter: 'A-' },\n    { gpa: 3.0, letter: 'B+' },\n    { gpa: 2.7, letter: 'B' },\n    { gpa: 2.3, letter: 'B-' },\n    { gpa: 2.0, letter: 'C+' },\n    { gpa: 1.7, letter: 'C' },\n    { gpa: 1.3, letter: 'C-' },\n    { gpa: 1.0, letter: 'D+' },\n    { gpa: 0.7, letter: 'D' },\n    { gpa: 0.0, letter: '", "pass": false}
{"question_id": "117", "program": "\n  const words = s.split(\" \");\n  const result = [];\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].replace(/[aeiou]/gi, \"\").length === n) {\n      result.push(words[i]);\n    }\n  }\n  return result;\n};\n", "pass": true}
{"question_id": "157", "program": "\n  if (a ** 2 + b ** 2 === c ** 2) {\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = rightAngleTriangle;\n", "pass": false}
{"question_id": "142", "program": "\n  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 3 === 0) {\n      sum += lst[i] ** 2;\n    } else if (i % 4 === 0 && i % 3 !== 0) {\n      sum += lst[i] ** 3;\n    } else {\n      sum += lst[i];\n    }\n  }\n  return sum;\n};\n", "pass": true}
{"question_id": "126", "program": "\n  let sorted = true;\n  for (let i = 0; i < lst.length - 1; i++) {\n    if (lst[i] > lst[i + 1]) {\n      sorted = false;\n      break;\n    }\n  }\n  return sorted;\n};\n", "pass": false}
{"question_id": "100", "program": "\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(i + 1);\n  }\n  return result;\n};\n\nmodule.exports = makeAPile;\n", "pass": false}
{"question_id": "113", "program": "\n  return lst.map((str) => {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n      if (str[i] % 2 !== 0) {\n        count++;\n      }\n    }\n    return `the number of odd elements ${count}n the str${str.length}ng ${str.length} of the ${str.length}nput.`;\n  });\n};\n", "pass": false}
{"question_id": "111", "program": "\n  const arr = test.split(' ');\n  const obj = {};\n  arr.forEach((letter) => {\n    if (obj[letter]) {\n      obj[letter] += 1;\n    } else {\n      obj[letter] = 1;\n    }\n  });\n  return obj;\n};\n\nmodule.exports = histogram;\n", "pass": false}
{"question_id": "98", "program": "\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n};\n\nmodule.exports = countUpper;\n", "pass": false}
{"question_id": "29", "program": "\n  return strings.filter(string => string.startsWith(prefix));\n};\n", "pass": true}
{"question_id": "84", "program": "\n  let sum = 0;\n  while (N > 0) {\n    sum += N % 10;\n    N = Math.floor(N / 10);\n  }\n  return sum.toString(2);\n};\n\nmodule.exports = solve;\n", "pass": true}
{"question_id": "119", "program": "\n  let result = 'Yes';\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] === '(') {\n      if (lst[i + 1] === ')') {\n        lst.splice(i, 2);\n        i = -1;\n      }\n    }\n  }\n  if (lst.length > 0) {\n    result = 'No';\n  }\n  return result;\n};\n\nmodule.exports = matchParens;\n", "pass": true}
{"question_id": "153", "program": "\n  let strongest = 0;\n  let strongest_extension = '';\n  for (let i = 0; i < extensions.length; i++) {\n    let cap = 0;\n    let sm = 0;\n    for (let j = 0; j < extensions[i].length; j++) {\n      if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        cap++;\n      } else {\n        sm++;\n      }\n    }\n    let strength = cap - sm;\n    if (strength > strongest) {\n      strongest = strength;\n      strongest_extension = extensions[i];\n    } else if (strength === strongest) {\n      if (extensions[i] < strongest_extension) {\n        strongest_extension = extensions[i];\n      }\n    }\n  }\n  return class_name + '.' + strongest_extension;\n", "pass": false}
{"question_id": "90", "program": "\n  if (lst.length < 2) return null;\n  let smallest = lst[0];\n  let secondSmallest = null;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < smallest) {\n      secondSmallest = smallest;\n      smallest = lst[i];\n    } else if (lst[i] < secondSmallest) {\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n};\n", "pass": false}
{"question_id": "24", "program": "\n  for (let i = n - 1; i > 0; i--) {\n    if (n % i === 0) {\n      return i;\n    }\n  }\n  return 1;\n};\n\nmodule.exports = largestDivisor;\n", "pass": true}
{"question_id": "73", "program": "\n  let left = 0;\n  let right = arr.length - 1;\n  let count = 0;\n\n  while (left < right) {\n    if (arr[left] !== arr[right]) {\n      if (arr[left] === arr[left + 1]) {\n        arr[right] = arr[left];\n        left++;\n      } else if (arr[right] === arr[right - 1]) {\n        arr[left] = arr[right];\n        right--;\n      } else {\n        arr[left] = arr[right];\n        arr[right] = arr[left];\n        left++;\n        right--;\n      }\n      count++;\n    }\n    left++;\n    right--;\n  }\n  return count;\n};\n\nmodule.exports = smallestChange;\n", "pass": false}
{"question_id": "46", "program": "\n  if (n < 0) {\n    return -1;\n  }\n  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return 0;\n  }\n  if (n === 2) {\n    return 2;\n  }\n  if (n === 3) {\n    return 0;\n  }\n  let fib4 = [0, 0, 2, 0];\n  for (let i = 4; i <= n; i++) {\n    fib4.push(fib4[i - 1] + fib4[i - 2] + fib4[i - 3] + fib4[i - 4]);\n  }\n  return fib4[n];\n};\n", "pass": true}
{"question_id": "79", "program": "\n  let binary = decimal.toString(2);\n  let binaryString = \"db\" + binary + \"db\";\n  return binaryString;\n};\n", "pass": true}
{"question_id": "80", "program": "\n  if (s.length < 3) return false;\n  let arr = s.split(\"\");\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1] && arr[i] === arr[i + 2]) {\n      count++;\n    }\n  }\n  if (count === 0) return true;\n  else return false;\n};", "pass": false}
{"question_id": "106", "program": "\n  let result = [];\n  for (let i = 1; i <= n; i++) {\n    if (i % 2 === 0) {\n      let factorial = 1;\n      for (let j = 1; j <= i; j++) {\n        factorial *= j;\n      }\n      result.push(factorial);\n    } else {\n      let sum = 0;\n      for (let j = 1; j <= i; j++) {\n        sum += j;\n      }\n      result.push(sum);\n    }\n  }\n  return result;\n};\n\nmodule.exports = f;\n", "pass": true}
{"question_id": "37", "program": "\n  let lPrime = [];\n  for (let i = 0; i < l.length; i++) {\n    if (i % 2 === 0) {\n      lPrime.push(l[i]);\n    } else {\n      lPrime.push(l[i]);\n    }\n  }\n  return lPrime;\n};\n", "pass": false}
{"question_id": "160", "program": "\n  let result = operand[0];\n  for (let i = 1; i < operand.length; i++) {\n    result = operate(operator[i - 1], result, operand[i]);\n  }\n  return result;\n};\n\nconst operate = (operator, a, b) => {\n  switch (operator) {\n    case \"+\":\n      return a + b;\n    case \"-\":\n      return a - b;\n    case \"*\":\n      return a * b;\n    case \"/\":\n      return Math.floor(a / b);\n    case \"**\":\n      return a ** b;\n    default:\n      return 0;\n  }\n};\n\nconst operator = [\"+\", \"*\", \"-\"];\nconst operand = [2, 3, 4, 5];\n", "pass": false}
{"question_id": "10", "program": "\n  let palindromicSuffix = '';\n  let i = string.length - 1;\n  while (i >= 0 && isPalindrome(string.slice(0, i + 1))) {\n    palindromicSuffix = string.slice(0, i + 1);\n    i--;\n  }\n  return string + palindromicSuffix.split('').reverse().join('');\n}\n", "pass": false}
{"question_id": "48", "program": "\n  if (text.length === 0) {\n    return true;\n  }\n  if (text.length === 1) {\n    return true;\n  }\n  if (text.length === 2) {\n    return text[0] === text[1];\n  }\n  if (text[0] === text[text.length - 1]) {\n    return isPalindrome(text.slice(1, text.length - 1));\n  }\n  return false;\n};\n\nmodule.exports = isPalindrome;\n", "pass": true}
{"question_id": "15", "program": "\n  return Array.from(Array(n + 1).keys()).join(' ');\n};\n\nmodule.exports = stringSequence;\n", "pass": true}
{"question_id": "68", "program": "\n  if (!arr.length) return [];\n  const even = arr.filter((val) => val % 2 === 0);\n  if (!even.length) return [];\n  const min = Math.min(...even);\n  const index = arr.indexOf(min);\n  return [min, index];\n};\n\nmodule.exports = pluck;\n", "pass": true}
{"question_id": "58", "program": "\n  const s1 = new Set(l1);\n  const s2 = new Set(l2);\n  const intersection = new Set([...s1].filter(x => s2.has(x)));\n  return [...intersection];\n};\n", "pass": false}
{"question_id": "93", "program": "\n  let encodedMessage = '';\n  for (let i = 0; i < message.length; i++) {\n    let letter = message[i];\n    if (letter === letter.toUpperCase()) {\n      letter = letter.toLowerCase();\n    } else {\n      letter = letter.toUpperCase();\n    }\n    if (letter === 'a') {\n      letter = 'c';\n    } else if (letter === 'e') {\n      letter = 'g';\n    } else if (letter === 'i') {\n      letter = 'k';\n    } else if (letter === 'o') {\n      letter = 's';\n    } else if (letter === 'u') {\n      letter = 'x';\n    }\n    encodedMessage += letter;\n ", "pass": false}
{"question_id": "5", "program": "\n  if (numbers.length === 0) {\n    return [];\n  }\n  return [numbers[0], ...intersperse(numbers.slice(1), delimeter).map((x) => [delimeter, x])].flat();\n};\n", "pass": false}
{"question_id": "103", "program": "\n  if (n > m) return -1;\n  const sum = n + m;\n  const avg = sum / 2;\n  const rounded = Math.round(avg);\n  return rounded.toString(2);\n};\n\nmodule.exports = roundedAvg;\n", "pass": false}
{"question_id": "33", "program": "\n  const lPrime = [];\n  for (let i = 0; i < l.length; i++) {\n    if (i % 3 === 0) {\n      lPrime.push(l[i]);\n    }\n  }\n  for (let i = 1; i < l.length; i++) {\n    if (i % 3 === 1) {\n      lPrime.push(l[i]);\n    }\n  }\n  for (let i = 2; i < l.length; i++) {\n    if (i % 3 === 2) {\n      lPrime.push(l[i]);\n    }\n  }\n  return lPrime;\n};\n\nmodule.exports = sortThird;\n", "pass": false}
{"question_id": "77", "program": "\n  const b = Math.pow(a, 1/3);\n  return Math.round(b) === b;\n};\n", "pass": false}
{"question_id": "44", "program": "\n  const digits = '0123456789ABCDEF';\n  let result = '';\n  do {\n    result = digits[x % base] + result;\n    x = Math.floor(x / base);\n  } while (x > 0);\n  return result;\n};\n", "pass": true}
{"question_id": "135", "program": "\n  let maxIndex = -1;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] < arr[i + 1]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n};\n", "pass": false}
{"question_id": "45", "program": "\n  return (a * h) / 2;\n};\n", "pass": true}
{"question_id": "12", "program": "\n  if (strings.length === 0) {\n    return null;\n  }\n  const longestString = strings.reduce((acc, curr) => {\n    if (acc.length < curr.length) {\n      return curr;\n    }\n    return acc;\n  });\n  return longestString;\n};\n\nmodule.exports = longest;\n", "pass": true}
{"question_id": "97", "program": "\n  return Math.abs(a % 10 * b % 10);\n};\n", "pass": false}
{"question_id": "149", "program": "\n  let sortedList = lst.sort((a, b) => a.length - b.length);\n  let sortedListWithoutOdd = sortedList.filter((word) => word.length % 2 === 0);\n  return sortedListWithoutOdd;\n};\n", "pass": false}
{"question_id": "156", "program": "\n  const romanNumerals = {\n    M: 1000,\n    D: 500,\n    C: 100,\n    L: 50,\n    X: 10,\n    V: 5,\n    I: 1,\n  };\n\n  let roman = '';\n  let num = number;\n\n  for (let i = 0; i < Object.keys(romanNumerals).length; i++) {\n    const key = Object.keys(romanNumerals)[i];\n    const value = romanNumerals[key];\n\n    while (num - value >= 0) {\n      roman += key;\n      num -= value;\n   ", "pass": false}
{"question_id": "86", "program": "\n  const words = s.split(' ');\n  const shuffled = words.map((word) => {\n    return word.split('').sort().join('');\n  });\n  return shuffled.join(' ');\n};\n", "pass": true}
{"question_id": "148", "program": "\n  const planets = [\n    \"Mercury\",\n    \"Venus\",\n    \"Earth\",\n    \"Mars\",\n    \"Jupiter\",\n    \"Saturn\",\n    \"Uranus\",\n    \"Neptune\",\n  ];\n  const planet1Index = planets.indexOf(planet1);\n  const planet2Index = planets.indexOf(planet2);\n  if (planet1Index === -1 || planet2Index === -1) return [];\n  if (planet1Index > planet2Index) {\n    const temp = planet1Index;\n    planet1Index = planet2Index;\n    planet2Index = temp;\n  }\n  return planets.slice(planet1Index + 1, planet2Index);\n};\n", "pass": false}
{"question_id": "39", "program": "\n  let fib = [0, 1];\n  let i = 2;\n  while (i <= n) {\n    fib.push(fib[i - 1] + fib[i - 2]);\n    i++;\n  }\n  return fib[n];\n};\n\nmodule.exports = primeFib;\n", "pass": false}
{"question_id": "138", "program": "\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    if (i % 2 === 0) {\n      sum += i;\n    }\n  }\n  return sum === n;\n};\n\nmodule.exports = isEqualToSumEven;\n", "pass": false}
{"question_id": "87", "program": "\n  const result = [];\n  for (let i = 0; i < lst.length; i++) {\n    const row = lst[i];\n    const index = row.indexOf(x);\n    if (index !== -1) {\n      result.push([i, index]);\n    }\n  }\n  return result.sort((a, b) => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n  });\n};\n\nmodule.exports = getRow;\n", "pass": false}
{"question_id": "152", "program": "\n  let result = [];\n  for (let i = 0; i < game.length; i++) {\n    result.push(Math.abs(game[i] - guess[i]));\n  }\n  return result;\n};\n", "pass": true}
{"question_id": "40", "program": "\n  const len = l.length;\n  if (len < 3) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    for (let j = i + 1; j < len; j++) {\n      for (let k = j + 1; k < len; k++) {\n        if (l[i] + l[j] + l[k] === 0) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = triplesSumToZero;\n", "pass": true}
{"question_id": "1", "program": "\n  const paren_list = paren_string.split(\"\");\n  const result = [];\n  let current_paren_group = \"\";\n  let open_parens = 0;\n\n  for (let i = 0; i < paren_list.length; i++) {\n    if (paren_list[i] === \"(\") {\n      open_parens++;\n      current_paren_group += paren_list[i];\n    } else if (paren_list[i] === \")\") {\n      open_parens--;\n      current_paren_group += paren_list[i];\n    } else {\n      current_paren_group += paren_list[i];\n    }\n\n    if (open_parens === 0) {\n      result.push(current_paren_group);\n      current_paren_group = \"\";\n    }\n  }\n\n  return result;\n};\n", "pass": false}
{"question_id": "71", "program": "\n  if (a + b < c || b + c < a || c + a < b) return -1;\n  const s = (a + b + c) / 2;\n  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n};\n\nexport default triangleArea;\n", "pass": false}
{"question_id": "114", "program": "\n  let minSum = Infinity;\n  for (let i = 0; i < nums.length; i++) {\n    let sum = 0;\n    for (let j = i; j < nums.length; j++) {\n      sum += nums[j];\n      if (sum < minSum) minSum = sum;\n    }\n  }\n  return minSum;\n};\n", "pass": true}
{"question_id": "56", "program": "\n  // your code here\n};\n\nmodule.exports = correctBracketing;\n", "pass": false}
{"question_id": "107", "program": "\n  let even = 0;\n  let odd = 0;\n\n  for (let i = 1; i <= n; i++) {\n    const str = i.toString();\n    const rev = str.split(\"\").reverse().join(\"\");\n    if (str === rev) {\n      if (str.length % 2 === 0) {\n        even++;\n      } else {\n        odd++;\n      }\n    }\n  }\n\n  return [even, odd];\n};\n", "pass": false}
{"question_id": "155", "program": "\n  let even = 0;\n  let odd = 0;\n  let numString = num.toString();\n  for (let i = 0; i < numString.length; i++) {\n    if (numString[i] % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n};\n", "pass": false}
{"question_id": "50", "program": "\n  return s.split(\"\").map(ch => String.fromCharCode(\n    ((ch.charCodeAt(0) - 5 - \"a\".charCodeAt(0)) % 26) + \"a\".charCodeAt(0)\n  )).join(\"\");\n}\n", "pass": false}
{"question_id": "143", "program": "\n  const words = sentence.split(' ');\n  const primeWords = [];\n\n  for (let i = 0; i < words.length; i++) {\n    if (isPrime(words[i].length)) {\n      primeWords.push(words[i]);\n    }\n  }\n\n  return primeWords.join(' ');\n};\n\nconst isPrime = (n) => {\n  if (n <= 1) return false;\n  if (n === 2) return true;\n  if (n % 2 === 0) return false;\n\n  for (let i = 3; i * i <= n; i += 2) {\n    if (n % i === 0) return false;\n  }\n\n  return true;\n};\n\nexport default wordsInSentence;\n", "pass": false}
{"question_id": "161", "program": "\n  let result = \"\";\n  let isLetter = false;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] >= \"a\" && s[i] <= \"z\") {\n      isLetter = true;\n      if (s[i] >= \"a\" && s[i] <= \"z\") {\n        result += s[i].toUpperCase();\n      } else {\n        result += s[i].toLowerCase();\n      }\n    } else if (s[i] >= \"A\" && s[i] <= \"Z\") {\n      isLetter = true;\n      if (s[i] >= \"A\" && s[i] <= \"Z\") {\n        result += s[i].toLowerCase();\n      } else {\n        result += s[i].toUpperCase();\n      }\n    } else {\n      result += s[i];\n    }\n  }\n  if (!isLetter) {\n    result = result.split(\"\").reverse().join(\"\");\n  }\n  return result;\n};\n", "pass": true}
{"question_id": "129", "program": "\n  const n = grid.length;\n  const m = grid[0].length;\n  const visited = new Array(n).fill(0).map(() => new Array(m).fill(false));\n  const queue = [];\n  const path = [];\n  let count = 0;\n\n  for (let i = 0; i < n", "pass": false}
{"question_id": "59", "program": "\n  let largest = 0;\n  for (let i = 2; i <= n; i++) {\n    if (n % i === 0) {\n      largest = i;\n    }\n  }\n  return largest;\n};\n\nmodule.exports = largestPrimeFactor;\n", "pass": false}
{"question_id": "55", "program": "\n  if (n <= 1) return n;\n  return fib(n - 1) + fib(n - 2);\n};\n\nmodule.exports = fib;\n", "pass": true}
{"question_id": "23", "program": "\n  return string.length;\n};\n", "pass": true}
{"question_id": "7", "program": "\n  return strings.filter(string => string.includes(substring));\n};\n", "pass": true}
{"question_id": "8", "program": "\n  let sum = 0;\n  let product = 1;\n  for (let i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n    product *= numbers[i];\n  }\n  return [sum, product];\n};\n", "pass": true}
{"question_id": "108", "program": "\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      count++;\n    } else if (arr[i] < 0) {\n      let sum = 0;\n      let num = arr[i];\n      while (num !== 0) {\n        sum += Math.abs(num % 10);\n        num = Math.floor(num / 10);\n      }\n      if (sum > 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n};\n", "pass": false}
{"question_id": "151", "program": "\n  let sum = 0;\n  lst.forEach((num) => {\n    if (num > 0 && num % 2 !== 0) {\n      sum += num ** 2;\n    }\n  });\n  return sum;\n};\n\nmodule.exports = doubleTheDifference;\n", "pass": true}
{"question_id": "22", "program": "\n  return values.filter((value) => typeof value === 'number');\n};\n\nmodule.exports = filterIntegers;\n", "pass": false}
{"question_id": "139", "program": "\n  let result = 1;\n  for (let i = n; i > 0; i--) {\n    result *= i;\n  }\n  return result;\n};\n\nmodule.exports = specialFactorial;\n", "pass": false}
{"question_id": "26", "program": "\n  const seen = {};\n  return numbers.filter((number) => {\n    if (seen[number]) {\n      return false;\n    }\n    seen[number] = true;\n    return true;\n  });\n};\n\nmodule.exports = removeDuplicates;\n", "pass": false}
{"question_id": "35", "program": "\n  return l.reduce((a, b) => Math.max(a, b));\n};\n\nmodule.exports = maxElement;\n", "pass": true}
{"question_id": "57", "program": "\n  let inc = true;\n  let dec = true;\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < l[i - 1]) {\n      dec = false;\n    }\n    if (l[i] > l[i - 1]) {\n      inc = false;\n    }\n  }\n  return inc || dec;\n};\n", "pass": true}
{"question_id": "62", "program": "\n  const result = [];\n  for (let i = 1; i < xs.length; i++) {\n    result.push(xs[i] * i);\n  }\n  return result;\n};\n\nexport default derivative;\n", "pass": false}
{"question_id": "70", "program": "\n  if (lst.length === 0) return lst;\n  const sorted = lst.sort((a, b) => a - b);\n  const result = [];\n  while (sorted.length > 0) {\n    result.push(sorted[0]);\n    sorted.splice(sorted.indexOf(sorted[0]), 1);\n    result.push(sorted.sort((a, b) => b - a)[0]);\n    sorted.splice(sorted.indexOf(sorted[0]), 1);\n  }\n  return result;\n};\n\nmodule.exports = strangeSortList;\n", "pass": false}
{"question_id": "6", "program": "\n  const paren_list = paren_string.split(' ');\n  const result = [];\n  for (let i = 0; i < paren_list.length; i++) {\n    const paren = paren_list[i];\n    let count = 0;\n    for (let j = 0; j < paren.length; j++) {\n      if (paren[j] === '(') {\n        count++;\n      } else if (paren[j] === ')') {\n        count--;\n      }\n    }\n    result.push(count);\n  }\n  return result;\n};\n\nmodule.exports = parseNestedParens;\n", "pass": false}
{"question_id": "28", "program": "\n  return strings.join('');\n};\n\nmodule.exports = concatenate;\n", "pass": true}
{"question_id": "163", "program": "\n  const result = [];\n  for (let i = a; i <= b; i++) {\n    if (i % 2 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n};\n\nmodule.exports = generateIntegers;\n", "pass": false}
