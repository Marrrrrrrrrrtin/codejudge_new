{"question_id": "61", "program": "\n  const stack = [];\n  for (let i = 0; i < brackets.length; i++) {\n    if (brackets[i] === \"(\") {\n      stack.push(brackets[i]);\n    } else {\n      if (stack.length === 0) {\n        return false;\n      }\n      stack.pop();\n    }\n  }\n  return stack.length === 0;\n};\n\nmodule.exports = correctBracketing;\n", "pass": true}
{"question_id": "104", "program": "\n  const digits = x.map((num) => {\n    return num.toString().split(\"\");\n  });\n  const result = [];\n  for (let i = 0; i < digits.length; i++) {\n    if (digits[i].includes(\"2\") || digits[i].includes(\"4\") || digits[i].includes(\"6\") || digits[i].includes(\"8\")) {\n      continue;\n    } else {\n      result.push(x[i]);\n    }\n  }\n  return result.sort((a, b) => a - b);\n};\n", "pass": false}
{"question_id": "105", "program": "\n  const sorted = arr.sort((a, b) => a.length - b.length);\n  return sorted;\n};\n\nconst byName = (arr) => {\n  const sorted = arr.sort((a, b) => a.localeCompare(b));\n  return sorted;\n};\n\nconst reverse = (arr) => {\n  const reversed = arr.reverse();\n  return reversed;\n};\n\nconst replaceDigits = (arr) => {\n  const names = {\n    1: \"One\",\n    2: \"Two\",\n    3: \"Three\",\n    4: \"Four\",\n    5: \"Five\",\n    6: \"Six\",\n    7: \"Seven\",\n    8: \"Eight\",\n    9: \"Nine\",\n  };\n\n  const replaced = arr.map((num) => {\n    if (", "pass": false}
{"question_id": "42", "program": "\n  return l.map(x => x + 1);\n}\n", "pass": true}
{"question_id": "145", "program": "\n  const sumOfDigits = (num) => {\n    let sum = 0;\n    while (num !== 0) {\n      sum += num % 10;\n      num = Math.floor(num / 10);\n    }\n    return sum;\n  };\n\n  return nums.sort((a, b) => {\n    const sumA = sumOfDigits(a);\n    const sumB = sumOfDigits(b);\n    if (sumA === sumB) {\n      return a - b;\n    }\n    return sumA - sumB;\n  });\n};\n", "pass": false}
{"question_id": "130", "program": "\n  let tribonacci = [1, 3, 2];\n  for (let i = 3; i <= n; i++) {\n    if (i % 2 === 0) {\n      tribonacci.push(tribonacci[i - 1] + tribonacci[i - 2] + tribonacci[i", "pass": false}
{"question_id": "88", "program": "\n  if (array.length === 0) return [];\n  if (array.length === 1) return [array[0]];\n  if (array.length === 2) return [array[1], array[0]];\n\n  let firstIndex = 0;\n  let lastIndex = array.length - 1;\n  let sum = array[firstIndex] + array[lastIndex];\n\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b) => a - b);\n  }\n};\n", "pass": true}
{"question_id": "11", "program": "\n  let result = '';\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += '0';\n    } else {\n      result += '1';\n    }\n  }\n  return result;\n};\n\nmodule.exports = stringXor;\n", "pass": true}
{"question_id": "137", "program": "\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return Math.max(a, b);\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    return a.replace(\",\", \".\") > b.replace(\",\", \".\") ? a : b;\n  } else if (typeof a === \"number\" && typeof b === \"string\") {\n    return a > parseFloat(b.replace(\",\", \".\")) ? a : parseFloat(b.replace(\",\", \".\"));\n  } else if (typeof a === \"string\" && typeof b === \"number\") {\n    return parseFloat(a.replace(\",\", \".\")) > b ? parseFloat(a.replace(\",\", \".\")) : b;\n  }\n};\n", "pass": false}
{"question_id": "66", "program": "\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n      sum += s[i].charCodeAt(0);\n    }\n  }\n  return sum;\n};\n", "pass": false}
{"question_id": "30", "program": "\n  return l.filter(n => n > 0);\n}\n", "pass": true}
{"question_id": "124", "program": "\n  const regex = /^\\d{2}-\\d{2}-\\d{4}$/;\n  if (!regex.test(date)) {\n    return false;\n  }\n  const [month, day, year] = date.split('-');\n  if (month < 1 || month > 12) {\n    return false;\n  }\n  if (day < 1 || day > 31) {\n    return false;\n  }\n  if (month === '02' && day > 29) {\n    return false;\n  }\n  if (month === '04' || month === '06' || month === '09' || month === '11') {\n    if (day > 30) {\n      return false;\n    }\n  }\n  return true;\n};\n", "pass": true}
{"question_id": "154", "program": "\n  if (b.length > a.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a.substring(i, i + b.length) === b) return true;\n  }\n  return false;\n};\n", "pass": false}
{"question_id": "18", "program": "\n  let count = 0;\n  let index = 0;\n  while (index !== -1) {\n    index = string.indexOf(substring, index);\n    if (index !== -1) {\n      count += 1;\n      index += substring.length;\n    }\n  }\n  return count;\n};\n\nmodule.exports = howManyTimes;\n", "pass": false}
{"question_id": "127", "program": "\n  const [start1, end1] = interval1;\n  const [start2, end2] = interval2;\n  if (start1 <= start2 && start2 <= end1) {\n    return \"YES\";\n  }\n  if (start1 <= end2 && end2 <= end1) {\n    return \"YES\";\n  }\n  if (start2 <= start1 && start1 <= end2) {\n    return \"YES\";\n  }\n  if (start2 <= end1 && end1 <= end2) {\n    return \"YES\";\n  }\n  return \"NO\";\n};\n", "pass": false}
{"question_id": "121", "program": "\n  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 && lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n};\n\nmodule.exports = solution;\n", "pass": true}
{"question_id": "0", "program": "\n  for (let i = 0; i < numbers.length - 1; i++) {\n    if (Math.abs(numbers[i] - numbers[i + 1]) <= threshold) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = hasCloseElements;\n", "pass": false}
{"question_id": "17", "program": "\n  const notes = music_string.split(' ');\n  const note_lengths = [];\n  notes.forEach((note) => {\n    if (note.includes('o')) {\n      note_lengths.push(4);\n    }\n    if (note.includes('|')) {\n      note_lengths.push(2);\n    }\n    if (note.includes('.')) {\n      note_lengths.push(1);\n    }\n  });\n  return note_lengths;\n};\n\nmodule.exports = parseMusic;\n", "pass": false}
{"question_id": "52", "program": "\n  return l.every(n => n < t);\n};\n", "pass": true}
{"question_id": "123", "program": "\n  let oddCollatz = [];\n  let collatz = n;\n  while (collatz !== 1) {\n    if (collatz % 2 !== 0) {\n      oddCollatz.push(collatz);\n    }\n    if (collatz % 2 === 0) {\n      collatz = collatz / 2;\n    } else {\n      collatz = collatz * 3 + 1;\n    }\n  }\n  oddCollatz.push(1);\n  return oddCollatz.sort((a, b) => a - b);\n};\n\nmodule.exports = getOddCollatz;\n", "pass": true}
{"question_id": "38", "program": "\n  var groups = [], groups2 = [];\n  for (let i = 0; i < Math.floor((s.length + 2) / 3); i++) {\n    groups.push(s.slice(3 * i, Math.min((3 * i + 3), s.length)));\n  }\n  for (const group of groups) {\n    if (group.length == 3)\n      groups2.push(group[1] + group[0]);\n    else\n      groups2.push(group);\n  }\n  return groups2.join('');\n}\n", "pass": false}
{"question_id": "72", "program": "\n  const sum = q.reduce((a, b) => a + b, 0);\n  const isBalanced = q.join(\"\") === q.reverse().join(\"\");\n  return isBalanced && sum <= w;\n};\n", "pass": true}
{"question_id": "132", "program": "\n  let stack = [];\n  let isNested = false;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '[') {\n      stack.push(string[i]);\n    } else {\n      stack.pop();\n    }\n    if (stack.length > 0) {\n      isNested = true;\n    }\n  }\n  return isNested;\n};\n", "pass": false}
{"question_id": "95", "program": "\n  if (Object.keys(dict).length === 0) return false;\n  const keys = Object.keys(dict);\n  const isLowerCase = keys.every((key) => key === key.toLowerCase());\n  const isUpperCase = keys.every((key) => key === key.toUpperCase());\n  return isLowerCase || isUpperCase;\n};\n", "pass": false}
{"question_id": "2", "program": "\n  const [integer, decimals] = number.toString().split('.');\n  return parseFloat(`0.${decimals}`);\n};\n\nexport default truncateNumber;\n", "pass": false}
{"question_id": "19", "program": "\n  const numberMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const numberArray = numbers.split(' ').map(number => numberMap[number]);\n  return numberArray.sort((a, b) => a - b).map(number => Object.keys(numberMap).find(key => numberMap[key] === number)).join(' ');\n};\n\nmodule.exports = sortNumbers;\n", "pass": true}
{"question_id": "76", "program": "\n  return x === Math.pow(n, parseInt(Math.log(x) / Math.log(n)));\n};\n", "pass": false}
{"question_id": "109", "program": "\n  let sorted = arr.sort((a, b) => a - b);\n  return arr.join(\"\") === sorted.join(\"\");\n};\n", "pass": false}
{"question_id": "67", "program": "\n  let apples = 0;\n  let oranges = 0;\n  let mangoes = 0;\n  let arr = s.split(\" \");\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === \"apples\") {\n      apples = parseInt(arr[i - 1]);\n    }\n    if (arr[i] === \"oranges\") {\n      oranges = parseInt(arr[i - 1]);\n    }\n  }\n  mangoes = n - apples - oranges;\n  return mangoes;\n};\n", "pass": true}
{"question_id": "159", "program": "\n  let total = number + need;\n  let left = remaining - need;\n  if (left < 0) {\n    total += left;\n    left = 0;\n  }\n  return [total, left];\n};\n\nmodule.exports = eat;\n", "pass": true}
{"question_id": "158", "program": "\n  let max = 0;\n  let result = \"\";\n  for (let word of words) {\n    let unique = new Set(word);\n    if (unique.size > max) {\n      max = unique.size;\n      result = word;\n    } else if (unique.size === max) {\n      if (word < result) {\n        result = word;\n      }\n    }\n  }\n  return result;\n};\n", "pass": true}
{"question_id": "144", "program": "\n  const xNumerator = parseInt(x.split('/')[0]);\n  const xDenominator = parseInt(x.split('/')[1]);\n  const nNumerator = parseInt(n.split('/')[0]);\n  const nDenominator = parseInt(n.split('/')[1]);\n\n  const result = xNumerator * nDenominator;\n  const isWholeNumber = result % xDenominator === 0;\n\n  return isWholeNumber;\n};\n", "pass": false}
