{"question_id": "112", "program": "\n        List<Object> result = new ArrayList<>();\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            if (!c.contains(String.valueOf(s.charAt(i)))) {\n                sb.append(s.charAt(i));\n            }\n        }\n        String res = sb.toString();\n        boolean isPalindrome = isPalindrome(res);\n        result.add(res);\n        result.add(isPalindrome);\n        return result;\n    }\n}", "pass": false}
{"question_id": "3", "program": "\n        int balance = 0;\n        for (int operation : operations) {\n            balance += operation;\n            if (balance < 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}", "pass": true}
{"question_id": "102", "program": "\n        // write your code here\n        if (x > y) {\n            return -1;\n        }\n        \n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n                return i;\n            }\n        }\n        \n        return -1;\n    }\n}", "pass": false}
{"question_id": "54", "program": "\n        char[] c0 = s0.toCharArray();\n        char[] c1 = s1.toCharArray();\n        Arrays.sort(c0);\n        Arrays.sort(c1);\n        return Arrays.equals(c0, c1);\n    }\n}", "pass": false}
{"question_id": "32", "program": "\n        if (xs.size() % 2 == 1) {\n            throw new IllegalArgumentException(\"xs must have even number of coefficients\");\n        }\n        double largest = 0;\n        for (int i = 0; i < xs.size(); i++) {\n            if (Math.abs(xs.get(i)) > largest) {\n                largest = Math.abs(xs.get(i));\n            }\n        }\n        if (largest == 0) {\n            throw new IllegalArgumentException(\"xs must have largest non zero coefficient\");\n        }\n        double x = 0;\n        double y = 0;\n        double step = 0.0000000001;\n        while (Math.\n    }\n}", "pass": false}
{"question_id": "75", "program": "\n        int i = 2;\n        while (i <= a / 2) {\n            if (a % i == 0) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n}", "pass": false}
{"question_id": "14", "program": "\n        List<String> prefixes = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n        return prefixes;\n    }\n}", "pass": true}
{"question_id": "128", "program": "\n        if (arr.size() == 0) {\n            return Optional.empty();\n        }\n        int product = 1;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if (num < 0) {\n                product *= -1;\n            } else if (num > 0) {\n                product *= 1;\n            }\n            sum += Math.abs(num);\n        }\n        return Optional.of(product * sum);\n    }\n}", "pass": false}
{"question_id": "53", "program": "\n        return x + y;\n    }\n}", "pass": true}
{"question_id": "43", "program": "\n        int n = l.size();\n        if (n < 2) {\n            return false;\n        }\n        Set<Integer> s = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            int x = l.get(i);\n            if (s.contains(x)) {\n                return true;\n            }\n            s.add(x);\n        }\n        return false;\n    }\n}", "pass": false}
{"question_id": "63", "program": "\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        int[] dp = new int[n + 1];\n        dp[0] = 0;\n        dp[1] = 0;\n        dp[2] = 1;\n        for (int i = 3; i <= n; i++) {\n            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];\n        }\n        return dp[n];\n    }\n}", "pass": true}
{"question_id": "99", "program": "\n        int count = 0;\n        for (char c : value.toCharArray()) {\n            if (Character.isUpperCase(c)) {\n                count++;\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "49", "program": "\n        if (n == 0) return 1;\n        int res = 1;\n        int base = 2;\n        while (n > 0) {\n            if ((n & 1) == 1) res = (res * base) % p;\n            base = (base * base) % p;\n            n >>= 1;\n        }\n        return res;\n    }\n}", "pass": true}
{"question_id": "65", "program": "\n        String s = String.valueOf(x);\n        int n = s.length();\n        shift = shift % n;\n        return s.substring(n - shift) + s.substring(0, n - shift);\n    }\n}", "pass": false}
{"question_id": "118", "program": "\n        char[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        char[] wordChars = word.toCharArray();\n        int wordLength = wordChars.length;\n        int closestVowelIndex = -1;\n        int closestVowelDistance = Integer.MAX_VALUE;\n        for (int i = wordLength - 1; i >= 0; i--) {\n            if (isVowel(wordChars[i], vowels)) {\n                if (i > 0 && i < wordLength - 1) {\n                    if (isConsonant(wordChars[i - 1], vowels) && isConsonant(wordChars[i + 1], vowels)) {\n                        int distance = wordLength - i - 1;\n                        if (distance < closestVowelDistance) {\n                            closestVowelDistance = distance;\n                            closestVowelIndex = i;\n                        }\n                    }\n                }\n            }\n        }\n        if (closestVowelIndex == -1) {\n            return \"\";\n        }\n        return String.valueOf(wordChars[closestVowelIndex]);\n    }\n}", "pass": false}
{"question_id": "115", "program": "\n        int rows = grid.size();\n        int cols = grid.get(0).size();\n        int[][] dp = new int[rows][cols];\n        int[][] dp_capacity = new int[rows][cols];\n        int max_fill = 0;\n\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < cols; j++) {\n                if (grid.get(i).get(j) == 1) {\n                    dp[i][j] = \n    }\n}", "pass": false}
{"question_id": "64", "program": "\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n                count++;\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "16", "program": "\n        HashSet<Character> set = new HashSet<>();\n        for (char c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n        }\n        return set.size();\n    }\n}", "pass": true}
{"question_id": "83", "program": "\n        int count = 0;\n        int start = 1;\n        int end = 1;\n        int i = 1;\n        while (i < n) {\n            start *= 10;\n            end *= 10;\n            count += start;\n            count += end;\n            i++;\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "69", "program": "\n        int max = 0;\n        int maxCount = 0;\n        int count = 0;\n        for (int i : lst) {\n            if (i > max) {\n                max = i;\n                count = 1;\n            } else if (i == max) {\n                count++;\n            }\n            if (count > maxCount) {\n                maxCount = count;\n            }\n        }\n        return maxCount >= max ? max : -1;\n    }\n}", "pass": false}
{"question_id": "131", "program": "\n        int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n            if (digit % 2 != 0) {\n                product *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n    }\n}", "pass": true}
{"question_id": "25", "program": "\n        List<Integer> factors = new ArrayList<>();\n        for (int i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                n /= i;\n                i--;\n            }\n        }\n        return factors;\n    }\n}", "pass": true}
{"question_id": "78", "program": "\n        int count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') {\n                count++;\n            }\n        }\n        return count;\n    }\n}", "pass": true}
{"question_id": "110", "program": "\n        // Write your code here\n        if (lst1.size() == 1) {\n            if (lst1.get(0) % 2 == 0) {\n                return \"YES\";\n            } else {\n                return \"NO\";\n            }\n        }\n        if (lst1.size() == 2) {\n            if (lst1.get(0) % 2 == 0 && lst1.get(1) % 2 == 0) {\n                return \"YES\";\n            } else {\n                return \"NO\";\n            }\n        }\n        if (lst1.size() == 3) {\n            if (lst1.get(0) % 2 == 0 && lst1.get(1) % 2 == 0 && lst1.get(2) % 2 == 0) {\n                return \"YES\";\n            } else {\n                return \"NO\";\n            }\n        }\n        if (lst1.size() == 4) {\n            if (lst1.get(0) % 2 == 0 && lst1.get(\n    }\n}", "pass": false}
{"question_id": "13", "program": "\n        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b % a, a);\n    }\n}", "pass": true}
{"question_id": "91", "program": "\n        String[] words = S.split(\"[.?!]\");\n        int count = 0;\n        for (String word : words) {\n            if (word.startsWith(\"I\")) {\n                count++;\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "134", "program": "\n        if (txt.length() == 0) {\n            return false;\n        }\n        char lastChar = txt.charAt(txt.length() - 1);\n        if (Character.isAlphabetic(lastChar)) {\n            String[] words = txt.split(\" \");\n            if (words.length == 1) {\n                return true;\n            } else {\n                String lastWord = words[words.length - 1];\n                if (lastWord.length() == 1) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n}", "pass": false}
{"question_id": "140", "program": "\n        String[] words = text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < words.length; i++) {\n            if(words[i].length() > 0) {\n                if(i > 0) {\n                    sb.append(\"_\");\n                }\n                sb.append(words[i]);\n            }\n        }\n        return sb.toString();\n    }\n}", "pass": false}
{"question_id": "36", "program": "\n        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                String str = String.valueOf(i);\n                for (int j = 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n}", "pass": true}
{"question_id": "60", "program": "\n        return n * (n + 1) / 2;\n    }\n}", "pass": true}
{"question_id": "92", "program": "\n        // Write your code here\n        if (x instanceof Integer && y instanceof Integer && z instanceof Integer) {\n            int a = (int) x;\n            int b = (int) y;\n            int c = (int) z;\n            return a + b == c || a + c == b || b + c == a;\n        }\n        return false;\n    }\n}", "pass": true}
{"question_id": "27", "program": "\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n            } else {\n                sb.append(Character.toUpperCase(c));\n            }\n        }\n        return sb.toString();\n    }\n}", "pass": true}
{"question_id": "120", "program": "\n        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(k, Collections.reverseOrder());\n        for (int i = 0; i < k; i++) {\n            pq.offer(arr.get(i));\n        }\n        for (int i = k; i < arr.size(); i++) {\n            if (pq.peek() < arr.get(i)) {\n                pq.poll();\n                pq.offer(arr.get(i));\n            }\n        }\n        List<Integer> res = new ArrayList<Integer>();\n        while (!pq.isEmpty()) {\n            res.add(pq.poll());\n        }\n        Collections.reverse(res);\n        return res;\n    }\n}", "pass": false}
{"question_id": "74", "program": "\n        int total1 = 0;\n        int total2 = 0;\n        for (String s : lst1) {\n            total1 += s.length();\n        }\n        for (String s : lst2) {\n            total2 += s.length();\n        }\n        if (total1 < total2) {\n            return lst1;\n        } else if (total1 > total2) {\n            return lst2;\n        } else {\n            return lst1;\n        }\n    }\n}", "pass": true}
{"question_id": "51", "program": "\n        String vowels = \"aeiouAEIOU\";\n        String result = \"\";\n        for (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i)) == -1) {\n                result += text.charAt(i);\n            }\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "136", "program": "\n        Optional<Integer> largest = Optional.empty();\n        Optional<Integer> smallest = Optional.empty();\n        for(int i : lst){\n            if(i < 0){\n                if(largest.isEmpty() || largest.get() < i){\n                    largest = Optional.of(i);\n                }\n            }\n            else if(i > 0){\n                if(smallest.isEmpty() || smallest.get() > i){\n                    smallest = Optional.of(i);\n                }\n            }\n        }\n        return Arrays.asList(largest, smallest);\n    }\n}", "pass": true}
{"question_id": "4", "program": "\n        double mean = numbers.stream().mapToDouble(x -> x).average().getAsDouble();\n        double sum = 0;\n        for (double number : numbers) {\n            sum += Math.abs(number - mean);\n        }\n        return sum / numbers.size();\n    }\n}", "pass": true}
{"question_id": "96", "program": "\n        List<Integer> primeNumbers = new ArrayList<>();\n        if (n <= 1) {\n            return primeNumbers;\n        }\n        for (int i = 2; i < n; i++) {\n            if (isPrime(i)) {\n                primeNumbers.add(i);\n            }\n        }\n        return primeNumbers;\n    }\n}", "pass": false}
{"question_id": "150", "program": "\n        if (n % 2 == 0) {\n            return y;\n        } else {\n            return x;\n        }\n    }\n}", "pass": false}
{"question_id": "41", "program": "\n        return n * (n + 1) / 2;\n    }\n}", "pass": false}
{"question_id": "162", "program": "\n        if (text.length() == 0) {\n            return Optional.empty();\n        }\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        md.update(text.getBytes());\n        byte[] digest = md.digest();\n        BigInteger bigInt = new BigInteger(1, digest);\n        String hashtext = bigInt.toString(16);\n        // Now we need to zero pad it if you actually want the full 32 chars.\n        while (hashtext.length() < 32) {\n            hashtext = \"0\" + hashtext;\n        }\n        return Optional.of(hashtext);\n    }\n}", "pass": true}
{"question_id": "133", "program": "\n        int sum = 0;\n        for (Double d : lst) {\n            sum += (int) Math.ceil(d * d);\n        }\n        return sum;\n    }\n}", "pass": false}
{"question_id": "101", "program": "\n        List<String> list = new ArrayList<String>();\n        String[] words = s.split(\"[\\\\s,]+\");\n        for (String word : words) {\n            list.add(word);\n        }\n        return list;\n    }\n}", "pass": false}
{"question_id": "94", "program": "\n        int max = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        String s = String.valueOf(max);\n        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            sum += Integer.parseInt(String.valueOf(s.charAt(i)));\n        }\n        return sum;\n    }\n}", "pass": false}
{"question_id": "147", "program": "\n        int count = 0;\n        for(int i = 1; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n                    if((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "89", "program": "\n        String result = \"\";\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (c >= 'a' && c <= 'z') {\n                result += (char) (c + 2);\n            } else if (c >= 'A' && c <= 'Z') {\n                result += (char) (c + 2);\n            } else {\n                result += c;\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "31", "program": "\n        if (n <= 1) {\n            return false;\n        }\n        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}", "pass": true}
{"question_id": "116", "program": "\n        Collections.sort(arr, new Comparator<Integer>() {\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                int c1 = Integer.bitCount(o1);\n                int c2 = Integer.bitCount(o2);\n                if (c1 != c2) {\n                    return c1 - c2;\n                }\n                return o1 - o2;\n            }\n        });\n        return arr;\n    }\n}", "pass": false}
{"question_id": "21", "program": "\n        double min = Collections.min(numbers);\n        double max = Collections.max(numbers);\n        List<Double> result = new ArrayList<>();\n        for (double number : numbers) {\n            result.add((number - min) / (max - min));\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "122", "program": "\n        int sum = 0;\n        for (int i = 0; i < k; i++) {\n            int num = arr.get(i);\n            int count = 0;\n            while (num > 0) {\n                count++;\n                num /= 10;\n            }\n            if (count <= 2) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n}", "pass": true}
{"question_id": "9", "program": "\n        List<Integer> result = new ArrayList<Integer>();\n        Deque<Integer> stack = new ArrayDeque<Integer>();\n        for (int i = 0; i < numbers.size(); i++) {\n            int num = numbers.get(i);\n            while (!stack.isEmpty() && stack.peek() < num) {\n                stack.pop();\n            }\n            stack.push(num);\n            result.add(stack.peek());\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "82", "program": "\n        int length = string.length();\n        if (length == 1) {\n            return true;\n        }\n        for (int i = 2; i <= length / 2; i++) {\n            if (length % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}", "pass": false}
{"question_id": "34", "program": "\n        return new ArrayList<>(new TreeSet<>(l));\n    }\n}", "pass": true}
{"question_id": "85", "program": "\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n}", "pass": false}
{"question_id": "146", "program": "\n        int count = 0;\n        for (int num : nums) {\n            if (num > 10 && (num % 10) % 2 == 1 && (num / 10) % 2 == 1) {\n                count++;\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "125", "program": "\n        // Write your code here\n        if (txt.contains(\" \")) {\n            return txt.split(\" \");\n        } else if (txt.contains(\",\")) {\n            return txt.split(\",\");\n        } else {\n            int count = 0;\n            for (int i = 0; i < txt.length(); i++) {\n                if (txt.charAt(i) >= 'a' && txt.charAt(i) <= 'z') {\n                    count++;\n                }\n            }\n            return count;\n        }\n    }\n}", "pass": false}
{"question_id": "47", "program": "\n        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n / 2 - 1) + l.get(n / 2)) / 2.0;\n        } else {\n            return l.get(n / 2);\n        }\n    }\n}", "pass": false}
{"question_id": "20", "program": "\n        double minDiff = Double.MAX_VALUE;\n        double diff = 0;\n        double first = 0;\n        double second = 0;\n        for (int i = 0; i < numbers.size() - 1; i++) {\n            for (int j = i + 1; j < numbers.size(); j++) {\n                diff = Math.abs(numbers.get(i) - numbers.get(j));\n                if (diff < minDiff) {\n                    minDiff = diff;\n                    first = numbers.get(i);\n                    second = numbers.get(j);\n                }\n            }\n        }\n        List<Double> closest = new ArrayList<>();\n        closest.add(first);\n        closest.add(second);\n        return closest;\n    }\n}", "pass": false}
{"question_id": "141", "program": "\n        String[] file_name_array = file_name.split(\"\\\\.\");\n        if (file_name_array.length != 2) {\n            return \"No\";\n        }\n        String[] file_name_array_first = file_name_array[0].split(\"\");\n        String[] file_name_array_second = file_name_array[1].split(\"\");\n        if (file_name_array_first.length > 3) {\n            return \"No\";\n        }\n        if (file_name_array_first.length == 0) {\n            return \"No\";\n        }\n        if (file_name_array_first[0].matches(\"[a-zA-Z]\")) {\n            return \"No\";\n        }\n        if (file_name_array_second[0].matches(\"[a-zA-Z]\")) {\n            return \"No\";\n        }\n        if (file_name_array_second[0].matches(\"[a-zA-Z]\")) {\n            return \"No\";\n        }\n        if (file_name_array_\n    }\n}", "pass": false}
{"question_id": "81", "program": "\n        List<String> letterGrades = new ArrayList<>();\n        for (Double grade : grades) {\n            if (grade >= 4.0) {\n                letterGrades.add(\"A+\");\n            } else if (grade >= 3.7) {\n                letterGrades.add(\"A\");\n            } else if (grade >= 3.3) {\n                letterGrades.add(\"A-\");\n            } else if (grade >= 3.0) {\n                letterGrades.add(\"B+\");\n            } else if (grade >= 2.7) {\n                letterGrades.add(\"B\");\n            } else if (grade >= 2.3) {\n                letterGrades.add(\"B-\");\n            } else if (grade >= 2.0) {\n               \n    }\n}", "pass": false}
{"question_id": "117", "program": "\n        List<String> words = new ArrayList<>();\n        String[] strs = s.split(\" \");\n        for (String str : strs) {\n            if (countConsonants(str) == n) {\n                words.add(str);\n            }\n        }\n        return words;\n    }\n}", "pass": false}
{"question_id": "157", "program": "\n        return a*a + b*b == c*c;\n    }\n}", "pass": false}
{"question_id": "142", "program": "\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 3 == 0) {\n                sum += lst.get(i) * lst.get(i);\n            } else if (i % 4 == 0 && i % 3 != 0) {\n                sum += lst.get(i) * lst.get(i) * lst.get(i);\n            }\n        }\n        return sum;\n    }\n}", "pass": false}
{"question_id": "126", "program": "\n        if (lst.size() < 2) {\n            return true;\n        }\n        int prev = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            int curr = lst.get(i);\n            if (curr < prev) {\n                return false;\n            }\n            if (curr == prev) {\n                return false;\n            }\n            prev = curr;\n        }\n        return true;\n    }\n}", "pass": false}
{"question_id": "100", "program": "\n        List<Integer> result = new ArrayList<>();\n        while (n > 0) {\n            result.add(n);\n            n = n % 2 == 0 ? n + 1 : n + 2;\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "113", "program": "\n        List<String> result = new ArrayList<>();\n        for (String s : lst) {\n            int count = 0;\n            for (char c : s.toCharArray()) {\n                if (c % 2 == 1) {\n                    count++;\n                }\n            }\n            result.add(\"the number of odd elements \" + count + \"n the str\" + count + \"ng \" + count + \" of the \" + count + \"nput.\");\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "111", "program": "\n        Map<String, Integer> result = new HashMap<>();\n        String[] words = test.split(\" \");\n        for (String word : words) {\n            if (result.containsKey(word)) {\n                result.put(word, result.get(word) + 1);\n            } else {\n                result.put(word, 1);\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "98", "program": "\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0 && Character.isUpperCase(s.charAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "29", "program": "\n        return strings.stream()\n            .filter(s -> s.startsWith(prefix))\n            .collect(Collectors.toList());\n    }\n}", "pass": true}
{"question_id": "84", "program": "\n        String result = \"\";\n        while (N > 0) {\n            result = Integer.toBinaryString(N % 2) + result;\n            N /= 2;\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "119", "program": "\n        int open = 0;\n        int close = 0;\n        for (String s : lst) {\n            if (s.charAt(0) == '(') {\n                open++;\n            } else {\n                close++;\n            }\n        }\n        if (open == close) {\n            return \"Yes\";\n        }\n        return \"No\";\n    }\n}", "pass": false}
{"question_id": "153", "program": "\n        String strongest = class_name;\n        int strength = -1;\n        for (String extension : extensions) {\n            int cap = 0, sm = 0;\n            for (char c : extension.toCharArray()) {\n                if (Character.isUpperCase(c)) {\n                    cap++;\n                } else {\n                    sm++;\n                }\n            }\n            int new_strength = cap - sm;\n            if (new_strength > strength) {\n                strength = new_strength;\n                strongest = class_name + \".\" + extension;\n            } else if (new_strength == strength) {\n                if (extension.compareTo(strongest.substring(strongest.indexOf(\".\") + 1)) < 0) {\n                    strongest = class_name + \"\n    }\n}", "pass": false}
{"question_id": "90", "program": "\n        if (lst.size() < 2) return Optional.empty();\n        int smallest = lst.get(0);\n        int secondSmallest = Integer.MAX_VALUE;\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < smallest) {\n                secondSmallest = smallest;\n                smallest = lst.get(i);\n            } else if (lst.get(i) < secondSmallest) {\n                secondSmallest = lst.get(i);\n            }\n        }\n        return secondSmallest == Integer.MAX_VALUE ? Optional.empty() : Optional.of(secondSmallest);\n    }\n}", "pass": false}
{"question_id": "24", "program": "\n        int divisor = 1;\n        while (n % divisor == 0) {\n            divisor++;\n        }\n        return divisor - 1;\n    }\n}", "pass": false}
{"question_id": "73", "program": "\n        int n = arr.size();\n        int[][] dp = new int[n][n];\n        for (int i = 0; i < n; i++) {\n            Arrays.fill(dp[i], Integer.MAX_VALUE);\n        }\n        for (int i = 0; i < n; i++) {\n            dp[i][i] = 0;\n        }\n        for (int i = 0; i < n - 1; i++) {\n            if (arr.get(i) == arr.get(i + 1)) {\n                dp[i][i + 1] = 0;\n            }\n        }\n        for (int i = 2; i < n; i++) {\n            for (int j = 0; j < n - i; j++) {\n                int k = j + i;\n                if (arr.get(j) == arr.get(k)) {\n                    dp[j][k] = dp[j + 1][k - 1];\n                } else {\n                    dp[j][k] = 1 + Math.min(dp[j][k - 1], Math.min(dp[j + 1][k], dp[j + 1][k - 1]));\n                }\n            }\n       \n    }\n}", "pass": false}
{"question_id": "46", "program": "\n        if (n <= 1) {\n            return n;\n        }\n        int[] fib = new int[n + 1];\n        fib[0] = 0;\n        fib[1] = 0;\n        fib[2] = 2;\n        fib[3] = 0;\n        for (int i = 4; i <= n; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2] + fib[i - 3] + fib[i - 4];\n        }\n        return fib[n];\n    }\n}", "pass": true}
{"question_id": "79", "program": "\n        String binary = Integer.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n    }\n}", "pass": true}
{"question_id": "80", "program": "\n        int n = s.length();\n        if (n < 3) {\n            return false;\n        }\n        for (int i = 0; i < n - 2; i++) {\n            if (s.charAt(i) == s.charAt(i + 1) && s.charAt(i + 1) == s.charAt(i + 2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}", "pass": false}
{"question_id": "106", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (int i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                int factorial = 1;\n                for (int j = 1; j <= i; j++) {\n                    factorial *= j;\n                }\n                result.add(factorial);\n            } else {\n                int sum = 0;\n                for (int j = 1; j <= i; j++) {\n                    sum += j;\n                }\n                result.add(sum);\n            }\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "37", "program": "\n        List<Integer> lPrime = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n            if (i % 2 == 0) {\n                lPrime.add(l.get(i));\n            }\n        }\n        Collections.sort(lPrime);\n        for (int i = 0; i < l.size(); i++) {\n            if (i % 2 == 1) {\n                lPrime.add(l.get(i));\n            }\n        }\n        return lPrime;\n    }\n}", "pass": false}
{"question_id": "160", "program": "\n        int result = operand.get(0);\n        for (int i = 0; i < operator.size(); i++) {\n            String op = operator.get(i);\n            int num = operand.get(i + 1);\n            if (op.equals(\"+\")) {\n                result += num;\n            } else if (op.equals(\"-\")) {\n                result -= num;\n            } else if (op.equals(\"*\")) {\n                result *= num;\n            } else if (op.equals(\"/\")) {\n                result /= num;\n            } else if (op.equals(\"**\")) {\n                result = (int) Math.pow(result, num);\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "10", "program": "\n        int i = string.length() - 1;\n        while (i >= 0 && isPalindrome(string.substring(0, i + 1))) {\n            i--;\n        }\n        return string + new StringBuilder(string.substring(0, i + 1)).reverse().toString();\n    }\n}", "pass": false}
{"question_id": "48", "program": "\n        if (text.length() == 0) {\n            return true;\n        }\n        if (text.length() == 1) {\n            return true;\n        }\n        if (text.length() == 2) {\n            return text.charAt(0) == text.charAt(1);\n        }\n        if (text.charAt(0) == text.charAt(text.length() - 1)) {\n            return isPalindrome(text.substring(1, text.length() - 1));\n        }\n        return false;\n    }\n}", "pass": true}
{"question_id": "15", "program": "\n        String result = \"\";\n        for (int i = 0; i <= n; i++) {\n            result += i + \" \";\n        }\n        return result.trim();\n    }\n}", "pass": true}
{"question_id": "68", "program": "\n        List<Integer> result = new ArrayList<>();\n        if (arr.size() == 0) {\n            return result;\n        }\n        int minIndex = 0;\n        int minValue = Integer.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            int value = arr.get(i);\n            if (value % 2 == 0 && value < minValue) {\n                minValue = value;\n                minIndex = i;\n            }\n        }\n        if (minValue == Integer.\n    }\n}", "pass": false}
{"question_id": "58", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i).equals(l2.get(j))) {\n                    result.add(l1.get(i));\n                }\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "93", "program": "\n        String encoded = \"\";\n        for (int i = 0; i < message.length(); i++) {\n            char c = message.charAt(i);\n            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n            } else {\n                c = Character.toUpperCase(c);\n            }\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                c = (char) (c + 2);\n            }\n            encoded += c;\n        }\n        return encoded;\n    }\n}", "pass": false}
{"question_id": "5", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i));\n            if (i < numbers.size() - 1) {\n                result.add(delimiter);\n            }\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "103", "program": "\n        if (n > m) {\n            return -1;\n        }\n        int sum = 0;\n        for (int i = n; i <= m; i++) {\n            sum += i;\n        }\n        int avg = sum / (m - n + 1);\n        return Integer.toBinaryString(avg);\n    }\n}", "pass": false}
{"question_id": "33", "program": "\n        List<Integer> lPrime = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n            if (i % 3 == 0) {\n                lPrime.add(l.get(i));\n            }\n        }\n        for (int i = 1; i < l.size(); i++) {\n            if (i % 3 == 1) {\n                lPrime.add(l.get(i));\n            }\n        }\n        for (int i = 2; i < l.size(); i++) {\n            if (i % 3 == 2) {\n                lPrime.add(l.get(i));\n            }\n        }\n        return lPrime;\n    }\n}", "pass": false}
{"question_id": "77", "program": "\n        int b = (int)Math.pow(a, 1.0/3);\n        return b*b*b == a;\n    }\n}", "pass": false}
{"question_id": "44", "program": "\n        if (x == 0) {\n            return \"0\";\n        }\n        String result = \"\";\n        while (x > 0) {\n            result = Integer.toString(x % base) + result;\n            x /= base;\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "135", "program": "\n        int n = arr.size();\n        int[] arr1 = new int[n];\n        for(int i=0;i<n;i++){\n            arr1[i] = arr.get(i);\n        }\n        Arrays.sort(arr1);\n        int max = -1;\n        for(int i=0;i<n-1;i++){\n            if(arr1[i]<arr1[i+1]){\n                max = Math.max(max,i);\n            }\n        }\n        return max;\n    }\n}", "pass": false}
{"question_id": "45", "program": "\n        return (a * h) / 2;\n    }\n}", "pass": true}
{"question_id": "12", "program": "\n        if (strings.isEmpty()) {\n            return Optional.empty();\n        }\n        return strings.stream().max(Comparator.comparingInt(String::length));\n    }\n}", "pass": true}
{"question_id": "97", "program": "\n        int product = a * b;\n        int unitDigit = product % 10;\n        return unitDigit;\n    }\n}", "pass": false}
{"question_id": "149", "program": "\n        List<String> result = new ArrayList<>();\n        for (String s : lst) {\n            if (s.length() % 2 == 0) {\n                result.add(s);\n            }\n        }\n        Collections.sort(result, new Comparator<String>() {\n            @Override\n            public int compare(String o1, String o2) {\n                if (o1.length() == o2.length()) {\n                    return o1.compareTo(o2);\n                }\n                return o1.length() - o2.length();\n            }\n        });\n        return result;\n    }\n}", "pass": true}
{"question_id": "156", "program": "\n        String[] romanNumerals = new String[]{\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n        int[] values = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < values.length; i++) {\n            while (number >= values[i]) {\n                sb.append(romanNumerals[i]);\n                number -= values[i];\n            }\n        }\n        return sb.toString();\n    }\n}", "pass": true}
{"question_id": "86", "program": "\n        String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            char[] chars = word.toCharArray();\n            Arrays.sort(chars);\n            sb.append(new String(chars));\n            sb.append(\" \");\n        }\n        return sb.toString().trim();\n    }\n}", "pass": true}
{"question_id": "148", "program": "\n        List<String> planets = Arrays.asList(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n        List<String> result = new ArrayList<>();\n        if (!planets.contains(planet1) || !planets.contains(planet2)) {\n            return result;\n        }\n        int index1 = planets.indexOf(planet1);\n        int index2 = planets.indexOf(planet2);\n        if (index1 > index2) {\n            int temp = index1;\n            index1 = index2;\n            index2 = temp;\n        }\n        for (int i = index1 + 1; i < index2; i++) {\n            result.add(planets.get(i));\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "39", "program": "\n        int[] fib = new int[n];\n        fib[0] = 0;\n        fib[1] = 1;\n        for (int i = 2; i < n; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n        }\n        for (int i = 0; i < n; i++) {\n            if (isPrime(fib[i])) {\n                return fib[i];\n            }\n        }\n        return -1;\n    }\n}", "pass": false}
{"question_id": "138", "program": "\n        if (n % 2 != 0) {\n            return false;\n        }\n        int count = 0;\n        for (int i = 2; i <= n / 2; i += 2) {\n            if (n - i >= 0 && (n - i) % 2 == 0) {\n                count++;\n            }\n        }\n        return count == 4;\n    }\n}", "pass": false}
{"question_id": "87", "program": "\n        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < lst.size(); i++) {\n            List<Integer> row = lst.get(i);\n            for (int j = 0; j < row.size(); j++) {\n                if (row.get(j) == x) {\n                    List<Integer> coordinate = new ArrayList<>();\n                    coordinate.add(i);\n                    coordinate.add(j);\n                    result.add(coordinate);\n                }\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "152", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "40", "program": "\n        for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size(); j++) {\n                for (int k = j + 1; k < l.size(); k++) {\n                    if (l.get(i) + l.get(j) + l.get(k) == 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}", "pass": true}
{"question_id": "1", "program": "\n        List<String> result = new ArrayList<>();\n        int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int i = 0; i < paren_string.length(); i++) {\n            if (paren_string.charAt(i) == '(') {\n                if (count == 0) {\n                    start = i;\n                }\n                count++;\n            } else if (paren_string.charAt(i) == ')') {\n                count--;\n                if (count == 0) {\n                    end = i;\n                    result.add(paren_string.substring(start, end + 1));\n                }\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "71", "program": "\n        double s = (a + b + c) / 2;\n        double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area == 0) {\n            return -1;\n        }\n        return area;\n    }\n}", "pass": false}
{"question_id": "114", "program": "\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            for (int j = i; j < nums.size(); j++) {\n                sum += nums.get(j);\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;\n    }\n}", "pass": true}
{"question_id": "56", "program": "\n        Stack<Character> stack = new Stack<>();\n        for (char c : brackets.toCharArray()) {\n            if (c == '<') {\n                stack.push(c);\n            } else {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                stack.pop();\n            }\n        }\n        return stack.isEmpty();\n    }\n}", "pass": true}
{"question_id": "107", "program": "\n        int even = 0, odd = 0;\n        for (int i = 1; i <= n; i++) {\n            if (isPalindrome(i)) {\n                if (i % 2 == 0) even++;\n                else odd++;\n            }\n        }\n        return Arrays.asList(even, odd);\n    }\n}", "pass": false}
{"question_id": "155", "program": "\n        int even = 0;\n        int odd = 0;\n        while (num != 0) {\n            int digit = num % 10;\n            if (digit % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n            num /= 10;\n        }\n        return Arrays.asList(even, odd);\n    }\n}", "pass": false}
{"question_id": "50", "program": "\n        StringBuilder sb = new StringBuilder();\n        for (char ch : s.toCharArray()) {\n            sb.append((char) ('a' + ((ch - 5 - 'a') % 26)));\n        }\n        return sb.toString();\n    }\n}", "pass": false}
{"question_id": "143", "program": "\n        String[] words = sentence.split(\" \");\n        String result = \"\";\n        for (int i = 0; i < words.length; i++) {\n            if (isPrime(words[i].length())) {\n                result += words[i] + \" \";\n            }\n        }\n        return result.trim();\n    }\n}", "pass": false}
{"question_id": "161", "program": "\n        if(s.length()==0)\n            return s;\n        char[] arr = s.toCharArray();\n        int i=0,j=s.length()-1;\n        while(i<j){\n            if(Character.isLetter(arr[i])){\n                if(Character.isUpperCase(arr[i]))\n                    arr[i] = Character.toLowerCase(arr[i]);\n                else\n                    arr[i] = Character.toUpperCase(arr[i]);\n            }\n            if(Character.isLetter(arr[j])){\n                if(Character.isUpperCase(arr[j]))\n                    arr[j] = Character.toLowerCase(arr[j]);\n                else\n                    arr[j] = Character.toUpperCase(arr[j]);\n            }\n            i++;\n            j--;\n        }\n        if(Character.isLetter(arr[i])){\n            if(Character.isUpperCase(arr[i]))\n                arr[i] = Character.toLowerCase(arr[i]);\n            else\n                arr[i] = Character.toUpperCase(arr[i]);\n        }\n        return new String(arr);\n    }\n}", "pass": false}
{"question_id": "129", "program": "\n        int n = grid.size();\n        int[][] dp = new int[n][n];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <\n    }\n}", "pass": false}
{"question_id": "59", "program": "\n        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n                return largestPrimeFactor(n / i);\n            }\n        }\n        return n;\n    }\n}", "pass": true}
{"question_id": "55", "program": "\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n        int[] dp = new int[n + 1];\n        dp[0] = 0;\n        dp[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            dp[i] = dp[i - 1] + dp[i - 2];\n        }\n        return dp[n];\n    }\n}", "pass": true}
{"question_id": "23", "program": "\n        return string.length();\n    }\n}", "pass": true}
{"question_id": "7", "program": "\n        return strings.stream()\n                .filter(s -> s.contains(substring))\n                .collect(Collectors.toList());\n    }\n}", "pass": false}
{"question_id": "8", "program": "\n        int sum = 0;\n        int product = 1;\n        for (int number : numbers) {\n            sum += number;\n            product *= number;\n        }\n        return List.of(sum, product);\n    }\n}", "pass": true}
{"question_id": "108", "program": "\n        int count = 0;\n        for (int num : arr) {\n            if (num > 0) {\n                count++;\n            } else if (num < 0) {\n                int sum = 0;\n                while (num != 0) {\n                    sum += Math.abs(num % 10);\n                    num /= 10;\n                }\n                if (sum > 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "151", "program": "\n        int sum = 0;\n        for (Object o : lst) {\n            if (o instanceof Integer) {\n                int i = (Integer) o;\n                if (i % 2 == 1) {\n                    sum += i * i;\n                }\n            }\n        }\n        return sum;\n    }\n}", "pass": true}
{"question_id": "22", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (Object value : values) {\n            if (value instanceof Integer) {\n                result.add((Integer) value);\n            }\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "139", "program": "\n        long result = 1;\n        for (int i = n; i > 0; i--) {\n            result *= i;\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "26", "program": "\n        return numbers.stream().distinct().collect(Collectors.toList());\n    }\n}", "pass": false}
{"question_id": "35", "program": "\n        int max = Integer.MIN_VALUE;\n        for (int i : l) {\n            if (i > max) {\n                max = i;\n            }\n        }\n        return max;\n    }\n}", "pass": true}
{"question_id": "57", "program": "\n        int n = l.size();\n        if (n <= 1) return true;\n        boolean inc = l.get(0) < l.get(1);\n        for (int i = 1; i < n; i++) {\n            if (inc) {\n                if (l.get(i) < l.get(i - 1)) return false;\n            } else {\n                if (l.get(i) > l.get(i - 1)) return false;\n            }\n        }\n        return true;\n    }\n}", "pass": true}
{"question_id": "62", "program": "\n        List<Integer> res = new ArrayList<>();\n        for (int i = 1; i < xs.size(); i++) {\n            res.add(i * xs.get(i));\n        }\n        return res;\n    }\n}", "pass": true}
{"question_id": "70", "program": "\n        List<Integer> result = new ArrayList<>();\n        if (lst.size() == 0) {\n            return result;\n        }\n        while (lst.size() > 0) {\n            int min = lst.get(0);\n            int minIndex = 0;\n            for (int i = 1; i < lst.size(); i++) {\n                if (lst.get(i) < min) {\n                    min = lst.get(i);\n                    minIndex = i;\n                }\n            }\n            result.add(min);\n            lst.remove(minIndex);\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "6", "program": "\n        List<Integer> result = new ArrayList<>();\n        String[] groups = paren_string.split(\" \");\n        for (String group : groups) {\n            int max_level = 0;\n            int current_level = 0;\n            for (char c : group.toCharArray()) {\n                if (c == '(') {\n                    current_level++;\n                    if (current_level > max_level) {\n                        max_level = current_level;\n                    }\n                } else if (c == ')') {\n                    current_level--;\n                }\n            }\n            result.add(max_level);\n        }\n        return result;\n    }\n}", "pass": true}
{"question_id": "28", "program": "\n        StringBuilder sb = new StringBuilder();\n        for (String s : strings) {\n            sb.append(s);\n        }\n        return sb.toString();\n    }\n}", "pass": true}
{"question_id": "163", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (int i = a; i <= b; i++) {\n            if (i % 2 == 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}", "pass": false}
