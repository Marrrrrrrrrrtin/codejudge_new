{"question_id": "61", "program": "\n        Stack<Character> stack = new Stack<>();\n        for (char c : brackets.toCharArray()) {\n            if (c == '(') {\n                stack.push(c);\n            } else {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                stack.pop();\n            }\n        }\n        return stack.isEmpty();\n    }\n}", "pass": true}
{"question_id": "104", "program": "\n        List<Integer> res = new ArrayList<>();\n        for (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n            boolean hasEvenDigit = false;\n            while (num > 0) {\n                int digit = num % 10;\n                if (digit % 2 == 0) {\n                    hasEvenDigit = true;\n                    break;\n                }\n                num /= 10;\n            }\n            if (!hasEvenDigit) {\n                res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n        return res;\n    }\n}", "pass": true}
{"question_id": "105", "program": "\n        List<String> result = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            int num = arr.get(i);\n            if (num >= 1 && num <= 9) {\n                result.add(getDigitName(num));\n            }\n        }\n        Collections.reverse(result);\n        return result;\n    }\n}", "pass": false}
{"question_id": "42", "program": "\n        return l.stream().map(x -> x + 1).collect(Collectors.toList());\n    }\n}", "pass": true}
{"question_id": "145", "program": "\n        // Write your code here\n        List<Integer> result = new ArrayList<>();\n        if (nums == null || nums.size() == 0) {\n            return result;\n        }\n        List<Integer>[] buckets = new ArrayList[nums.size() + 1];\n        for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            if (buckets[sum] == null) {\n                buckets[sum] = new ArrayList<>();\n            }\n            buckets[sum].add(i);\n        }\n        for (int i = 0; i < buckets.length; i++) {\n            if (buckets[i] != null) {\n                for (int j = 0; j < buckets[i].size(); j++) {\n                    result.add(nums.get(buckets[i].get(j)));\n                }\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "130", "program": "\n        List<Integer> list = new ArrayList<>();\n        if (n == 0) {\n            list.add(0);\n            return list;\n        }\n        if (n == 1) {\n            list.add(0);\n            list.add(1);\n            return list;\n        }\n        if (n == 2) {\n            list.add(0);\n            list.add(1);\n            list.add(3);\n            return list;\n        }\n        list.add(0);\n        list.add(1);\n        list.add(3);\n        for (int i = 3; i <= n; i++) {\n            if (i % 2 == 0) {\n                list.add(list.get(i - 1) + list.get(i - 2));\n            } else {\n                list.add(list.get(i - 1) + list.get(i - 2) + list.get(i -\n    }\n}", "pass": false}
{"question_id": "88", "program": "\n        if (array.size() <= 1) {\n            return array;\n        }\n        int sum = array.get(0) + array.get(array.size() - 1);\n        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n        }\n        return array;\n    }\n}", "pass": true}
{"question_id": "11", "program": "\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == '1' && b.charAt(i) == '1') {\n                sb.append('0');\n            } else {\n                sb.append('1');\n            }\n        }\n        return sb.toString();\n    }\n}", "pass": false}
{"question_id": "137", "program": "\n        if (a instanceof Integer) {\n            if (b instanceof Integer) {\n                return Optional.of(Math.max((Integer) a, (Integer) b));\n            } else if (b instanceof Float) {\n                return Optional.of(((Integer) a).floatValue() > (Float) b ? a : b);\n            } else if (b instanceof String) {\n                return Optional.of(a);\n            }\n        } else if (a instanceof Float) {\n            if (b instanceof Integer) {\n                return Optional.of(((Float) a).floatValue() > (Integer) b ? a : b);\n            } else if (b instanceof Float) {\n                return Optional.of(Math.max((Float) a, (Float) b));\n            } else if (b instanceof String) {\n                return Optional.of(a);\n            }\n        } else if (a instanceof String) {\n            if (b instanceof Integer) {\n                return Optional.of(a);\n            } else if (b instanceof Float) {\n                return Optional.of(a);\n            } else if (b instanceof String) {\n                return Optional.of(a);\n            }\n        }\n        return Optional.empty();\n    }\n}", "pass": false}
{"question_id": "66", "program": "\n        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c)) {\n                sum += c;\n            }\n        }\n        return sum;\n    }\n}", "pass": true}
{"question_id": "30", "program": "\n        return l.stream().filter(x -> x > 0).collect(Collectors.toList());\n    }\n}", "pass": true}
{"question_id": "124", "program": "\n        if(date.length() != 10) return false;\n        if(date.charAt(2) != '-' || date.charAt(5) != '-') return false;\n        int month = Integer.parseInt(date.substring(0, 2));\n        int day = Integer.parseInt(date.substring(3, 5));\n        int year = Integer.parseInt(date.substring(6, 10));\n        if(month < 1 || month > 12) return false;\n        if(month == 2) {\n            if(day < 1 || day > 29) return false;\n        } else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 ||\n    }\n}", "pass": false}
{"question_id": "154", "program": "\n        if(a.contains(b))\n            return true;\n        else if(a.length() == b.length())\n            return false;\n        else {\n            String temp = b;\n            for(int i=0;i<a.length()-b.length();i++) {\n                temp = temp + b.charAt(i);\n                if(a.contains(temp))\n                    return true;\n            }\n            return false;\n        }\n    }\n}", "pass": false}
{"question_id": "18", "program": "\n        int count = 0;\n        int i = 0;\n        while (i < string.length()) {\n            int j = i;\n            int k = 0;\n            while (j < string.length() && k < substring.length() && string.charAt(j) == substring.charAt(k)) {\n                j++;\n                k++;\n            }\n            if (k == substring.length()) {\n                count++;\n                i = j;\n            } else {\n                i++;\n            }\n        }\n        return count;\n    }\n}", "pass": false}
{"question_id": "127", "program": "\n        int start1 = interval1.get(0);\n        int end1 = interval1.get(1);\n        int start2 = interval2.get(0);\n        int end2 = interval2.get(1);\n\n        if (start1 > end1 || start2 > end2) {\n            return \"NO\";\n        }\n\n        int start = Math.max(start1, start2);\n        int end = Math.min(end1, end2);\n\n        if (start > end) {\n            return \"NO\";\n        }\n\n        return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n    }\n}", "pass": false}
{"question_id": "121", "program": "\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n                if (lst.get(i) % 2 != 0) {\n                    sum += lst.get(i);\n                }\n            }\n        }\n        return sum;\n    }\n}", "pass": true}
{"question_id": "0", "program": "\n        for (int i = 0; i < numbers.size() - 1; i++) {\n            for (int j = i + 1; j < numbers.size(); j++) {\n                if (Math.abs(numbers.get(i) - numbers.get(j)) < threshold) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}", "pass": true}
{"question_id": "17", "program": "\n        List<Integer> result = new ArrayList<>();\n        for (char c : string.toCharArray()) {\n            switch (c) {\n                case 'o':\n                    result.add(4);\n                    break;\n                case '|':\n                    result.add(2);\n                    break;\n                case '.':\n                    result.add(1);\n                    break;\n            }\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "52", "program": "\n        for (int i : l) {\n            if (i > t) {\n                return false;\n            }\n        }\n        return true;\n    }\n}", "pass": false}
{"question_id": "123", "program": "\n        List<Integer> result = new ArrayList<>();\n        if (n < 1) {\n            return result;\n        }\n        result.add(n);\n        while (n != 1) {\n            if (n % 2 == 0) {\n                n = n / 2;\n            } else {\n                n = 3 * n + 1;\n            }\n            result.add(n);\n        }\n        return result;\n    }\n}", "pass": false}
{"question_id": "38", "program": "\n        // split string to groups. Each of length 3.\n        List<String> groups = new ArrayList<>();\n        for (int i = 0; i < s.length(); i += 3) {\n            groups.add(s.substring(i, Math.min(i + 3, s.length())));\n        }\n        // cycle elements in each group. Unless group has fewer elements than 3.\n        for (int i = 0; i < groups.size(); i++) {\n            if (groups.get(i).length() == 3) {\n                groups.set(i, groups.get(i).charAt(1) + groups.get(i).substring(0, 1));\n            }\n        }\n        return String.join(\"\", groups);\n    }\n}", "pass": false}
{"question_id": "72", "program": "\n        int sum = 0;\n        for (int i = 0; i < q.size(); i++) {\n            sum += q.get(i);\n        }\n        if (sum > w) {\n            return false;\n        }\n        for (int i = 0; i < q.size() / 2; i++) {\n            if (q.get(i) != q.get(q.size() - 1 - i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}", "pass": true}
{"question_id": "132", "program": "\n        Stack<Character> stack = new Stack<>();\n        for (char c : string.toCharArray()) {\n            if (c == '[') {\n                stack.push(c);\n            } else {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                stack.pop();\n            }\n        }\n        return stack.isEmpty();\n    }\n}", "pass": false}
{"question_id": "95", "program": "\n        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean isLower = true;\n        boolean isUpper = true;\n        for (Map.Entry<Object, Object> entry : dict.entrySet()) {\n            if (!(entry.getKey() instanceof String)) {\n                return false;\n            }\n            String key = (String) entry.getKey();\n            if (key.toLowerCase().equals(key)) {\n                isUpper = false;\n            } else if (key.toUpperCase().equals(key)) {\n                isLower = false;\n            } else {\n                return false;\n            }\n        }\n        return isLower || isUpper;\n    }\n}", "pass": true}
{"question_id": "2", "program": "\n        return number - Math.floor(number);\n    }\n}", "pass": true}
{"question_id": "19", "program": "\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n        return String.join(\" \", nums);\n    }\n}", "pass": false}
{"question_id": "76", "program": "\n        int i = 1;\n        while (i <= x) {\n            if (i == x) {\n                return true;\n            }\n            i *= n;\n        }\n        return false;\n    }\n}", "pass": false}
{"question_id": "109", "program": "\n        int n = arr.size();\n        int[] count = new int[n];\n        for (int i = 0; i < n; i++) {\n            count[i] = arr.get(i);\n        }\n        for (int i = 0; i < n; i++) {\n            if (count[i] != i + 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n}", "pass": false}
{"question_id": "67", "program": "\n        int apples = 0;\n        int oranges = 0;\n        String[] arr = s.split(\" \");\n        for (String str : arr) {\n            if (str.equals(\"apples\")) {\n                apples = Integer.parseInt(arr[0]);\n            } else if (str.equals(\"oranges\")) {\n                oranges = Integer.parseInt(arr[2]);\n            }\n        }\n        return n - apples - oranges;\n    }\n}", "pass": false}
{"question_id": "159", "program": "\n        List<Integer> result = new ArrayList<>();\n        int total = number + need;\n        if (total > remaining) {\n            total = remaining;\n        }\n        result.add(total);\n        result.add(remaining - total);\n        return result;\n    }\n}", "pass": false}
{"question_id": "158", "program": "\n        String max = \"\";\n        int maxCount = 0;\n        for (String word : words) {\n            int count = 0;\n            Set<Character> set = new HashSet<>();\n            for (char c : word.toCharArray()) {\n                if (!set.contains(c)) {\n                    count++;\n                    set.add(c);\n                }\n            }\n            if (count > maxCount) {\n                maxCount = count;\n                max = word;\n            } else if (count == maxCount && word.compareTo(max) < 0) {\n                max = word;\n            }\n        }\n        return max;\n    }\n}", "pass": true}
{"question_id": "144", "program": "\n        int numerator = Integer.parseInt(x.split(\"/\")[0]);\n        int denominator = Integer.parseInt(x.split(\"/\")[1]);\n        int numerator2 = Integer.parseInt(n.split(\"/\")[0]);\n        int denominator2 = Integer.parseInt(n.split(\"/\")[1]);\n        return (numerator * denominator2) % (denominator * denominator2) == 0;\n    }\n}", "pass": false}
