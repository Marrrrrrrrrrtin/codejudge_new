{"question_id": "61", "program": "\n    stack := []rune{}\n    for _, r := range brackets {\n        switch r {\n        case '(':\n            stack = append(stack, r)\n        case ')':\n            if len(stack) == 0 {\n                return false\n            }\n            stack = stack[:len(stack)-1]\n        }\n    }\n    return len(stack) == 0\n}\n", "pass": true}
{"question_id": "104", "program": "\n    var result []int\n    for _, v := range x {\n        if !hasEvenDigit(v) {\n            result = append(result, v)\n        }\n    }\n    sort.Ints(result)\n    return result\n}\n", "pass": false}
{"question_id": "105", "program": "\n    sort.Ints(arr)\n    var result []string\n    for _, v := range arr {\n        if v >= 1 && v <= 9 {\n            result = append(result, []string{\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"}[v-1])\n        }\n    }\n    return result\n}\n", "pass": false}
{"question_id": "42", "program": "\n\tfor i := range l {\n\t\tl[i]++\n\t}\n\treturn l\n}\n", "pass": true}
{"question_id": "145", "program": "\n    // Your code here\n    sort.Slice(nums, func(i, j int) bool {\n        if sumDigits(nums[i]) == sumDigits(nums[j]) {\n            return i < j\n        }\n        return sumDigits(nums[i]) < sumDigits(nums[j])\n    })\n    return nums\n}\n", "pass": false}
{"question_id": "130", "program": "\n\tif n == 0 {\n\t\treturn []float64{1}\n\t}\n\tif n == 1 {\n\t\treturn []float64{1, 3}\n\t}\n\tif n == 2 {\n\t\treturn []float64{1, 3, 2}\n\t", "pass": false}
{"question_id": "88", "program": "\n    if len(array) == 0 {\n        return array\n    }\n    sort.Ints(array)\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        sort.Sort(sort.Reverse(sort.IntSlice(array)))\n    }\n    return array\n}\n", "pass": false}
{"question_id": "11", "program": "\n    var result string\n    for i := 0; i < len(a); i++ {\n        if a[i] == b[i] {\n            result += \"0\"\n        } else {\n            result += \"1\"\n        }\n    }\n    return result\n}\n", "pass": true}
{"question_id": "137", "program": "\n    // Convert the interface to a string\n    aStr := fmt.Sprintf(\"%v\", a)\n    bStr := fmt.Sprintf(\"%v\", b)\n\n    // Remove any commas from the string\n    aStr = strings.Replace(aStr, \",\", \"\", -1)\n    bStr = strings.Replace", "pass": false}
{"question_id": "66", "program": "\n\tvar sum int\n\tfor _, c := range x {\n\t\tif c >= 'A' && c <= 'Z' {\n\t\t\tsum += int(c)\n\t\t}\n\t}\n\treturn sum\n}\n", "pass": true}
{"question_id": "30", "program": "\n\tvar result []int\n\tfor _, v := range l {\n\t\tif v > 0 {\n\t\t\tresult = append(result, v)\n\t\t}\n\t}\n\treturn result\n}\n", "pass": false}
{"question_id": "124", "program": "\n    // Write your code here\n    if date == \"\" {\n        return false\n    }\n    if strings.Count(date, \"-\") != 2 {\n        return false\n    }\n    dateSlice := strings.Split(date, \"-\")\n    if len(dateSlice) != 3 {\n        return false\n    }\n    month, err := strconv.Atoi(dateSlice[0])\n    if err != nil {\n        return false\n    }\n    day, err := strconv.Atoi(dateSlice[1])\n    if err != nil {\n        return", "pass": false}
{"question_id": "154", "program": "\n    if len(a) < len(b) {\n        return false\n    }\n    if a == b {\n        return true\n    }\n    for i := 0; i < len(b); i++ {\n        if a[i] != b[i] {\n            return false\n        }\n    }\n    return true\n}\n", "pass": false}
{"question_id": "18", "program": "\n\tvar count int\n\tfor i:=0; i<len(str); i++{\n\t\tif str[i:i+len(substring)] == substring{\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}\n", "pass": false}
{"question_id": "127", "program": "\n    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[1] || interval2[0] > interval1[1] {\n        return \"NO\"\n    }\n    if interval1[0] <= interval2[0] && interval1[1] >= interval2[1] {\n        return \"YES\"\n    }\n    if interval2[0] <= interval1[0] && interval2[1] >= interval1[1] {\n        return \"", "pass": false}
{"question_id": "121", "program": "\n    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "pass": true}
{"question_id": "0", "program": "\n    for i := 0; i < len(numbers) - 1; i++ {\n        for j := i + 1; j < len(numbers); j++ {\n            if math.Abs(numbers[i] - numbers[j]) <= threshold {\n                return true\n            }\n        }\n    }\n    return false\n}\n", "pass": true}
{"question_id": "17", "program": "\n    var result []int\n    for _, note := range music_string{\n        switch note {\n        case 'o':\n            result = append(result, 4)\n        case '|':\n            result = append(result, 2)\n        case '.':\n            result = append(result, 1)\n        }\n    }\n    return result\n}\n", "pass": false}
{"question_id": "52", "program": "\n\tfor _, v := range l {\n\t\tif v > t {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "pass": false}
{"question_id": "123", "program": "\n    var result []int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            result = append(result, i)\n        }\n    }\n    sort.Ints(result)\n    return result\n}\n", "pass": false}
{"question_id": "38", "program": "\n    groups := make([]string, 0)\n    for i := 0; i < ((len(s) + 2) / 3); i++ {\n        groups = append(groups, s[3*i:int(math.Min(float64(3*i+3), float64(len(s))))])\n    }\n    newGroups := make([]string, 0)\n    for _, group := range groups {\n        runes := []rune(group)\n        if len(group) == 3 {\n            newGroups = append(newGroups, string(append(runes[1:], runes[0])))\n        } else {\n            newGroups = append(newGroups, group)\n        }\n    }\n    return strings.Join(newGroups, \"\")\n}\n", "pass": false}
{"question_id": "72", "program": "\n\tvar sum int = 0\n\tfor i := 0; i < len(q); i++ {\n\t\tsum += q[i]\n\t}\n\tif sum > w {\n\t\treturn false\n\t}\n\tfor i := 0; i < len(q); i++ {\n\t\tif q[i] != q[len(q)-i-1] {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "pass": true}
{"question_id": "132", "program": "\n\tvar stack []rune\n\tfor _, r := range s {\n\t\tif r == '[' {\n\t\t\tstack = append(stack, r)\n\t\t} else {\n\t\t\tif len(stack) == 0 {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tstack =", "pass": false}
{"question_id": "95", "program": "\n    if len(dict) == 0 {\n        return false\n    }\n    var isLowerCase bool = true\n    var isUpperCase bool = true\n    for k, _ := range dict {\n        switch k.(type) {\n        case string:\n            if isLowerCase && !strings.EqualFold(k.(string), strings.ToLower(k.(string))) {\n                isLowerCase = false\n            }\n            if isUpperCase && !strings.EqualFold(k.(string), strings.ToUpper(k.(string))) {\n                isUpperCase = false\n            }\n        default:\n            return false\n        }\n    }\n    return isLowerCase || isUpperCase\n}\n", "pass": false}
{"question_id": "2", "program": "\n    return math.Mod(number, 1)\n}\n", "pass": true}
{"question_id": "19", "program": "\n    var sorted []string\n    for _, word := range strings.Fields(numbers) {\n        sorted = append(sorted, word)\n    }\n    sort.Strings(sorted)\n    return strings.Join(sorted, \" \")\n}\n", "pass": false}
{"question_id": "76", "program": "\n    return n**int(math.Log(float64(x))/math.Log(float64(n)))==x\n}\n", "pass": false}
{"question_id": "109", "program": "\n    // Write your code here\n    if len(arr) == 0 {\n        return true\n    }\n    sort.Ints(arr)\n    for i := 1; i < len(arr); i++ {\n        if arr[i] < arr[i-1] {\n            return false\n        }\n    }\n    return true\n}\n", "pass": false}
{"question_id": "67", "program": "\n\t// Write your code here\n\ts = strings.Replace(s,\" \",\"\",-1)\n\ts = strings.Replace(s,\"and\",\"\",-1)\n\ts = strings.Replace(s,\"oranges\",\"\",-1)\n\ts = strings.Replace(s,\"apples\",\"\",-1)\n\ts = strings.Replace(s,\"mangoes\",\"\",-1)\n\ts = strings.Replace(s,\"mango\",\"\",-1)\n\ts = strings.Replace(s,\"fruits\",\"\",-1)\n\ts = strings.Replace(s,\"fruit\",\"\",", "pass": false}
{"question_id": "159", "program": "\n\tif number+need > remaining {\n\t\treturn []int{number + remaining, 0}\n\t}\n\treturn []int{number + need, remaining - need}\n}\n", "pass": false}
{"question_id": "158", "program": "\n    var max string\n    var maxCount int\n    for _, word := range words {\n        if len(word) > maxCount {\n            max = word\n            maxCount = len(word)\n        }\n    }\n    return max\n}\n", "pass": false}
{"question_id": "144", "program": "\n    // Write your code here\n    xn, _ := strconv.Atoi(strings.Split(x, \"/\")[0])\n    xd, _ := strconv.Atoi(strings.Split(x, \"/\")[1])\n    nn, _ := strconv.Atoi(strings.Split(n, \"/\")[0])\n    nd, _ := strconv.Atoi(strings.Split(n, \"/\")[1])\n    return xn * nd % xd * nd == nn * xd\n}\n", "pass": false}
